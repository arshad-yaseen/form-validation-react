{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar tslib = require('tslib');\nvar heyListen = require('hey-listen');\nvar styleValueTypes = require('style-value-types');\nvar sync = require('framesync');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\nvar clamp = function (min, max, v) {\n  return Math.min(Math.max(v, min), max);\n};\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\nfunction findSpring(_a) {\n  var _b = _a.duration,\n    duration = _b === void 0 ? 800 : _b,\n    _c = _a.bounce,\n    bounce = _c === void 0 ? 0.25 : _c,\n    _d = _a.velocity,\n    velocity = _d === void 0 ? 0 : _d,\n    _e = _a.mass,\n    mass = _e === void 0 ? 1 : _e;\n  var envelope;\n  var derivative;\n  heyListen.warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n  var dampingRatio = 1 - bounce;\n  dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n  duration = clamp(minDuration, maxDuration, duration / 1000);\n  if (dampingRatio < 1) {\n    envelope = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var a = exponentialDecay - velocity;\n      var b = calcAngularFreq(undampedFreq, dampingRatio);\n      var c = Math.exp(-delta);\n      return safeMin - a / b * c;\n    };\n    derivative = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var d = delta * velocity + velocity;\n      var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n      var f = Math.exp(-delta);\n      var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n      var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n      return factor * ((d - e) * f) / g;\n    };\n  } else {\n    envelope = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (undampedFreq - velocity) * duration + 1;\n      return -safeMin + a * b;\n    };\n    derivative = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (velocity - undampedFreq) * (duration * duration);\n      return a * b;\n    };\n  }\n  var initialGuess = 5 / duration;\n  var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n  duration = duration * 1000;\n  if (isNaN(undampedFreq)) {\n    return {\n      stiffness: 100,\n      damping: 10,\n      duration: duration\n    };\n  } else {\n    var stiffness = Math.pow(undampedFreq, 2) * mass;\n    return {\n      stiffness: stiffness,\n      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n      duration: duration\n    };\n  }\n}\nvar rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n  var result = initialGuess;\n  for (var i = 1; i < rootIterations; i++) {\n    result = result - envelope(result) / derivative(result);\n  }\n  return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n  return keys.some(function (key) {\n    return options[key] !== undefined;\n  });\n}\nfunction getSpringOptions(options) {\n  var springOptions = tslib.__assign({\n    velocity: 0.0,\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    isResolvedFromDuration: false\n  }, options);\n  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {\n    var derived = findSpring(options);\n    springOptions = tslib.__assign(tslib.__assign(tslib.__assign({}, springOptions), derived), {\n      velocity: 0.0,\n      mass: 1.0\n    });\n    springOptions.isResolvedFromDuration = true;\n  }\n  return springOptions;\n}\nfunction spring(_a) {\n  var _b = _a.from,\n    from = _b === void 0 ? 0.0 : _b,\n    _c = _a.to,\n    to = _c === void 0 ? 1.0 : _c,\n    _d = _a.restSpeed,\n    restSpeed = _d === void 0 ? 2 : _d,\n    restDelta = _a.restDelta,\n    options = tslib.__rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n  var state = {\n    done: false,\n    value: from\n  };\n  var _e = getSpringOptions(options),\n    stiffness = _e.stiffness,\n    damping = _e.damping,\n    mass = _e.mass,\n    velocity = _e.velocity,\n    duration = _e.duration,\n    isResolvedFromDuration = _e.isResolvedFromDuration;\n  var resolveSpring = zero;\n  var resolveVelocity = zero;\n  function createSpring() {\n    var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    var initialDelta = to - from;\n    var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n    restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n    if (dampingRatio < 1) {\n      var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 * Math.sin(angularFreq_1 * t) + initialDelta * Math.cos(angularFreq_1 * t));\n      };\n      resolveVelocity = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 + initialDelta * Math.cos(angularFreq_1 * t)) - envelope * (Math.cos(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq_1 * initialDelta * Math.sin(angularFreq_1 * t));\n      };\n    } else if (dampingRatio === 1) {\n      resolveSpring = function (t) {\n        return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n      };\n    } else {\n      var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n      };\n    }\n  }\n  createSpring();\n  return {\n    next: function (t) {\n      var current = resolveSpring(t);\n      if (!isResolvedFromDuration) {\n        var currentVelocity = resolveVelocity(t) * 1000;\n        var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n        var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n      } else {\n        state.done = t >= duration;\n      }\n      state.value = state.done ? to : current;\n      return state;\n    },\n    flipTarget: function () {\n      var _a;\n      velocity = -velocity;\n      _a = [to, from], from = _a[0], to = _a[1];\n      createSpring();\n    }\n  };\n}\nspring.needsInterpolation = function (a, b) {\n  return typeof a === \"string\" || typeof b === \"string\";\n};\nvar zero = function (_t) {\n  return 0;\n};\nvar progress = function (from, to, value) {\n  var toFromDifference = to - from;\n  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\nvar mix = function (from, to, progress) {\n  return -progress * from + progress * to + from;\n};\nvar mixLinearColor = function (from, to, v) {\n  var fromExpo = from * from;\n  var toExpo = to * to;\n  return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [styleValueTypes.hex, styleValueTypes.rgba, styleValueTypes.hsla];\nvar getColorType = function (v) {\n  return colorTypes.find(function (type) {\n    return type.test(v);\n  });\n};\nvar notAnimatable = function (color) {\n  return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function (from, to) {\n  var fromColorType = getColorType(from);\n  var toColorType = getColorType(to);\n  heyListen.invariant(!!fromColorType, notAnimatable(from));\n  heyListen.invariant(!!toColorType, notAnimatable(to));\n  heyListen.invariant(fromColorType.transform === toColorType.transform, \"Both colors must be hex/RGBA, OR both must be HSLA.\");\n  var fromColor = fromColorType.parse(from);\n  var toColor = toColorType.parse(to);\n  var blended = tslib.__assign({}, fromColor);\n  var mixFunc = fromColorType === styleValueTypes.hsla ? mix : mixLinearColor;\n  return function (v) {\n    for (var key in blended) {\n      if (key !== \"alpha\") {\n        blended[key] = mixFunc(fromColor[key], toColor[key], v);\n      }\n    }\n    blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n    return fromColorType.transform(blended);\n  };\n};\nvar zeroPoint = {\n  x: 0,\n  y: 0,\n  z: 0\n};\nvar isNum = function (v) {\n  return typeof v === 'number';\n};\nvar combineFunctions = function (a, b) {\n  return function (v) {\n    return b(a(v));\n  };\n};\nvar pipe = function () {\n  var transformers = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    transformers[_i] = arguments[_i];\n  }\n  return transformers.reduce(combineFunctions);\n};\nfunction getMixer(origin, target) {\n  if (isNum(origin)) {\n    return function (v) {\n      return mix(origin, target, v);\n    };\n  } else if (styleValueTypes.color.test(origin)) {\n    return mixColor(origin, target);\n  } else {\n    return mixComplex(origin, target);\n  }\n}\nvar mixArray = function (from, to) {\n  var output = tslib.__spreadArray([], from);\n  var numValues = output.length;\n  var blendValue = from.map(function (fromThis, i) {\n    return getMixer(fromThis, to[i]);\n  });\n  return function (v) {\n    for (var i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n    return output;\n  };\n};\nvar mixObject = function (origin, target) {\n  var output = tslib.__assign(tslib.__assign({}, origin), target);\n  var blendValue = {};\n  for (var key in output) {\n    if (origin[key] !== undefined && target[key] !== undefined) {\n      blendValue[key] = getMixer(origin[key], target[key]);\n    }\n  }\n  return function (v) {\n    for (var key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n    return output;\n  };\n};\nfunction analyse(value) {\n  var parsed = styleValueTypes.complex.parse(value);\n  var numValues = parsed.length;\n  var numNumbers = 0;\n  var numRGB = 0;\n  var numHSL = 0;\n  for (var i = 0; i < numValues; i++) {\n    if (numNumbers || typeof parsed[i] === \"number\") {\n      numNumbers++;\n    } else {\n      if (parsed[i].hue !== undefined) {\n        numHSL++;\n      } else {\n        numRGB++;\n      }\n    }\n  }\n  return {\n    parsed: parsed,\n    numNumbers: numNumbers,\n    numRGB: numRGB,\n    numHSL: numHSL\n  };\n}\nvar mixComplex = function (origin, target) {\n  var template = styleValueTypes.complex.createTransformer(target);\n  var originStats = analyse(origin);\n  var targetStats = analyse(target);\n  heyListen.invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n  return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\nvar mixNumber = function (from, to) {\n  return function (p) {\n    return mix(from, to, p);\n  };\n};\nfunction detectMixerFactory(v) {\n  if (typeof v === 'number') {\n    return mixNumber;\n  } else if (typeof v === 'string') {\n    if (styleValueTypes.color.test(v)) {\n      return mixColor;\n    } else {\n      return mixComplex;\n    }\n  } else if (Array.isArray(v)) {\n    return mixArray;\n  } else if (typeof v === 'object') {\n    return mixObject;\n  }\n}\nfunction createMixers(output, ease, customMixer) {\n  var mixers = [];\n  var mixerFactory = customMixer || detectMixerFactory(output[0]);\n  var numMixers = output.length - 1;\n  for (var i = 0; i < numMixers; i++) {\n    var mixer = mixerFactory(output[i], output[i + 1]);\n    if (ease) {\n      var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n      mixer = pipe(easingFunction, mixer);\n    }\n    mixers.push(mixer);\n  }\n  return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n  var from = _a[0],\n    to = _a[1];\n  var mixer = _b[0];\n  return function (v) {\n    return mixer(progress(from, to, v));\n  };\n}\nfunction slowInterpolate(input, mixers) {\n  var inputLength = input.length;\n  var lastInputIndex = inputLength - 1;\n  return function (v) {\n    var mixerIndex = 0;\n    var foundMixerIndex = false;\n    if (v <= input[0]) {\n      foundMixerIndex = true;\n    } else if (v >= input[lastInputIndex]) {\n      mixerIndex = lastInputIndex - 1;\n      foundMixerIndex = true;\n    }\n    if (!foundMixerIndex) {\n      var i = 1;\n      for (; i < inputLength; i++) {\n        if (input[i] > v || i === lastInputIndex) {\n          break;\n        }\n      }\n      mixerIndex = i - 1;\n    }\n    var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n    return mixers[mixerIndex](progressInRange);\n  };\n}\nfunction interpolate(input, output, _a) {\n  var _b = _a === void 0 ? {} : _a,\n    _c = _b.clamp,\n    isClamp = _c === void 0 ? true : _c,\n    ease = _b.ease,\n    mixer = _b.mixer;\n  var inputLength = input.length;\n  heyListen.invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n  heyListen.invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n  if (input[0] > input[inputLength - 1]) {\n    input = [].concat(input);\n    output = [].concat(output);\n    input.reverse();\n    output.reverse();\n  }\n  var mixers = createMixers(output, ease, mixer);\n  var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n  return isClamp ? function (v) {\n    return interpolator(clamp(input[0], input[inputLength - 1], v));\n  } : interpolator;\n}\nvar reverseEasing = function (easing) {\n  return function (p) {\n    return 1 - easing(1 - p);\n  };\n};\nvar mirrorEasing = function (easing) {\n  return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n  };\n};\nvar createExpoIn = function (power) {\n  return function (p) {\n    return Math.pow(p, power);\n  };\n};\nvar createBackIn = function (power) {\n  return function (p) {\n    return p * p * ((power + 1) * p - power);\n  };\n};\nvar createAnticipate = function (power) {\n  var backEasing = createBackIn(power);\n  return function (p) {\n    return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n  };\n};\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar linear = function (p) {\n  return p;\n};\nvar easeIn = createExpoIn(2);\nvar easeOut = reverseEasing(easeIn);\nvar easeInOut = mirrorEasing(easeIn);\nvar circIn = function (p) {\n  return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = reverseEasing(circIn);\nvar circInOut = mirrorEasing(circOut);\nvar backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = reverseEasing(backIn);\nvar backInOut = mirrorEasing(backIn);\nvar anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n  if (p === 1 || p === 0) return p;\n  var p2 = p * p;\n  return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = reverseEasing(bounceOut);\nvar bounceInOut = function (p) {\n  return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\nfunction defaultEasing(values, easing) {\n  return values.map(function () {\n    return easing || easeInOut;\n  }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n  var numValues = values.length;\n  return values.map(function (_value, i) {\n    return i !== 0 ? i / (numValues - 1) : 0;\n  });\n}\nfunction convertOffsetToTimes(offset, duration) {\n  return offset.map(function (o) {\n    return o * duration;\n  });\n}\nfunction keyframes(_a) {\n  var _b = _a.from,\n    from = _b === void 0 ? 0 : _b,\n    _c = _a.to,\n    to = _c === void 0 ? 1 : _c,\n    ease = _a.ease,\n    offset = _a.offset,\n    _d = _a.duration,\n    duration = _d === void 0 ? 300 : _d;\n  var state = {\n    done: false,\n    value: from\n  };\n  var values = Array.isArray(to) ? to : [from, to];\n  var times = convertOffsetToTimes(offset && offset.length === values.length ? offset : defaultOffset(values), duration);\n  function createInterpolator() {\n    return interpolate(times, values, {\n      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n    });\n  }\n  var interpolator = createInterpolator();\n  return {\n    next: function (t) {\n      state.value = interpolator(t);\n      state.done = t >= duration;\n      return state;\n    },\n    flipTarget: function () {\n      values.reverse();\n      interpolator = createInterpolator();\n    }\n  };\n}\nfunction decay(_a) {\n  var _b = _a.velocity,\n    velocity = _b === void 0 ? 0 : _b,\n    _c = _a.from,\n    from = _c === void 0 ? 0 : _c,\n    _d = _a.power,\n    power = _d === void 0 ? 0.8 : _d,\n    _e = _a.timeConstant,\n    timeConstant = _e === void 0 ? 350 : _e,\n    _f = _a.restDelta,\n    restDelta = _f === void 0 ? 0.5 : _f,\n    modifyTarget = _a.modifyTarget;\n  var state = {\n    done: false,\n    value: from\n  };\n  var amplitude = power * velocity;\n  var ideal = from + amplitude;\n  var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n  if (target !== ideal) amplitude = target - from;\n  return {\n    next: function (t) {\n      var delta = -amplitude * Math.exp(-t / timeConstant);\n      state.done = !(delta > restDelta || delta < -restDelta);\n      state.value = state.done ? target : target + delta;\n      return state;\n    },\n    flipTarget: function () {}\n  };\n}\nvar types = {\n  keyframes: keyframes,\n  spring: spring,\n  decay: decay\n};\nfunction detectAnimationFromOptions(config) {\n  if (Array.isArray(config.to)) {\n    return keyframes;\n  } else if (types[config.type]) {\n    return types[config.type];\n  }\n  var keys = new Set(Object.keys(config));\n  if (keys.has(\"ease\") || keys.has(\"duration\") && !keys.has(\"dampingRatio\")) {\n    return keyframes;\n  } else if (keys.has(\"dampingRatio\") || keys.has(\"stiffness\") || keys.has(\"mass\") || keys.has(\"damping\") || keys.has(\"restSpeed\") || keys.has(\"restDelta\")) {\n    return spring;\n  }\n  return keyframes;\n}\nfunction loopElapsed(elapsed, duration, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  if (isForwardPlayback === void 0) {\n    isForwardPlayback = true;\n  }\n  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nvar framesync = function (update) {\n  var passTimestamp = function (_a) {\n    var delta = _a.delta;\n    return update(delta);\n  };\n  return {\n    start: function () {\n      return sync__default['default'].update(passTimestamp, true);\n    },\n    stop: function () {\n      return sync.cancelSync.update(passTimestamp);\n    }\n  };\n};\nfunction animate(_a) {\n  var _b, _c;\n  var from = _a.from,\n    _d = _a.autoplay,\n    autoplay = _d === void 0 ? true : _d,\n    _e = _a.driver,\n    driver = _e === void 0 ? framesync : _e,\n    _f = _a.elapsed,\n    elapsed = _f === void 0 ? 0 : _f,\n    _g = _a.repeat,\n    repeatMax = _g === void 0 ? 0 : _g,\n    _h = _a.repeatType,\n    repeatType = _h === void 0 ? \"loop\" : _h,\n    _j = _a.repeatDelay,\n    repeatDelay = _j === void 0 ? 0 : _j,\n    onPlay = _a.onPlay,\n    onStop = _a.onStop,\n    onComplete = _a.onComplete,\n    onRepeat = _a.onRepeat,\n    onUpdate = _a.onUpdate,\n    options = tslib.__rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n  var to = options.to;\n  var driverControls;\n  var repeatCount = 0;\n  var computedDuration = options.duration;\n  var latest;\n  var isComplete = false;\n  var isForwardPlayback = true;\n  var interpolateFromNumber;\n  var animator = detectAnimationFromOptions(options);\n  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n  var animation = animator(tslib.__assign(tslib.__assign({}, options), {\n    from: from,\n    to: to\n  }));\n  function repeat() {\n    repeatCount++;\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n    if (!isComplete) {\n      var state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n    if (isComplete) {\n      if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n  autoplay && play();\n  return {\n    stop: function () {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\nfunction velocityPerSecond(velocity, frameDuration) {\n  return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\nfunction inertia(_a) {\n  var _b = _a.from,\n    from = _b === void 0 ? 0 : _b,\n    _c = _a.velocity,\n    velocity = _c === void 0 ? 0 : _c,\n    min = _a.min,\n    max = _a.max,\n    _d = _a.power,\n    power = _d === void 0 ? 0.8 : _d,\n    _e = _a.timeConstant,\n    timeConstant = _e === void 0 ? 750 : _e,\n    _f = _a.bounceStiffness,\n    bounceStiffness = _f === void 0 ? 500 : _f,\n    _g = _a.bounceDamping,\n    bounceDamping = _g === void 0 ? 10 : _g,\n    _h = _a.restDelta,\n    restDelta = _h === void 0 ? 1 : _h,\n    modifyTarget = _a.modifyTarget,\n    driver = _a.driver,\n    onUpdate = _a.onUpdate,\n    onComplete = _a.onComplete;\n  var currentAnimation;\n  function isOutOfBounds(v) {\n    return min !== undefined && v < min || max !== undefined && v > max;\n  }\n  function boundaryNearest(v) {\n    if (min === undefined) return max;\n    if (max === undefined) return min;\n    return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n  }\n  function startAnimation(options) {\n    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    currentAnimation = animate(tslib.__assign(tslib.__assign({}, options), {\n      driver: driver,\n      onUpdate: function (v) {\n        var _a;\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n      },\n      onComplete: onComplete\n    }));\n  }\n  function startSpring(options) {\n    startAnimation(tslib.__assign({\n      type: \"spring\",\n      stiffness: bounceStiffness,\n      damping: bounceDamping,\n      restDelta: restDelta\n    }, options));\n  }\n  if (isOutOfBounds(from)) {\n    startSpring({\n      from: from,\n      velocity: velocity,\n      to: boundaryNearest(from)\n    });\n  } else {\n    var target = power * velocity + from;\n    if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n    var boundary_1 = boundaryNearest(target);\n    var heading_1 = boundary_1 === min ? -1 : 1;\n    var prev_1;\n    var current_1;\n    var checkBoundary = function (v) {\n      prev_1 = current_1;\n      current_1 = v;\n      velocity = velocityPerSecond(v - prev_1, sync.getFrameData().delta);\n      if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n        startSpring({\n          from: v,\n          to: boundary_1,\n          velocity: velocity\n        });\n      }\n    };\n    startAnimation({\n      type: \"decay\",\n      from: from,\n      velocity: velocity,\n      timeConstant: timeConstant,\n      power: power,\n      restDelta: restDelta,\n      modifyTarget: modifyTarget,\n      onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n    });\n  }\n  return {\n    stop: function () {\n      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    }\n  };\n}\nvar radiansToDegrees = function (radians) {\n  return radians * 180 / Math.PI;\n};\nvar angle = function (a, b) {\n  if (b === void 0) {\n    b = zeroPoint;\n  }\n  return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\nvar applyOffset = function (from, to) {\n  var hasReceivedFrom = true;\n  if (to === undefined) {\n    to = from;\n    hasReceivedFrom = false;\n  }\n  return function (v) {\n    if (hasReceivedFrom) {\n      return v - from + to;\n    } else {\n      from = v;\n      hasReceivedFrom = true;\n      return to;\n    }\n  };\n};\nvar identity = function (v) {\n  return v;\n};\nvar createAttractor = function (alterDisplacement) {\n  if (alterDisplacement === void 0) {\n    alterDisplacement = identity;\n  }\n  return function (constant, origin, v) {\n    var displacement = origin - v;\n    var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n    return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n  };\n};\nvar attract = createAttractor();\nvar attractExpo = createAttractor(Math.sqrt);\nvar degreesToRadians = function (degrees) {\n  return degrees * Math.PI / 180;\n};\nvar isPoint = function (point) {\n  return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\nvar isPoint3D = function (point) {\n  return isPoint(point) && point.hasOwnProperty('z');\n};\nvar distance1D = function (a, b) {\n  return Math.abs(a - b);\n};\nfunction distance(a, b) {\n  if (isNum(a) && isNum(b)) {\n    return distance1D(a, b);\n  } else if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n  }\n}\nvar pointFromVector = function (origin, angle, distance) {\n  angle = degreesToRadians(angle);\n  return {\n    x: distance * Math.cos(angle) + origin.x,\n    y: distance * Math.sin(angle) + origin.y\n  };\n};\nvar toDecimal = function (num, precision) {\n  if (precision === void 0) {\n    precision = 2;\n  }\n  precision = Math.pow(10, precision);\n  return Math.round(num * precision) / precision;\n};\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n  if (smoothing === void 0) {\n    smoothing = 0;\n  }\n  return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\nvar smooth = function (strength) {\n  if (strength === void 0) {\n    strength = 50;\n  }\n  var previousValue = 0;\n  var lastUpdated = 0;\n  return function (v) {\n    var currentFramestamp = sync.getFrameData().timestamp;\n    var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n    var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n    lastUpdated = currentFramestamp;\n    previousValue = newValue;\n    return newValue;\n  };\n};\nvar snap = function (points) {\n  if (typeof points === 'number') {\n    return function (v) {\n      return Math.round(v / points) * points;\n    };\n  } else {\n    var i_1 = 0;\n    var numPoints_1 = points.length;\n    return function (v) {\n      var lastDistance = Math.abs(points[0] - v);\n      for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n        var point = points[i_1];\n        var distance = Math.abs(point - v);\n        if (distance === 0) return point;\n        if (distance > lastDistance) return points[i_1 - 1];\n        if (i_1 === numPoints_1 - 1) return point;\n        lastDistance = distance;\n      }\n    };\n  }\n};\nfunction velocityPerFrame(xps, frameDuration) {\n  return xps / (1000 / frameDuration);\n}\nvar wrap = function (min, max, v) {\n  var rangeSize = max - min;\n  return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\nvar a = function (a1, a2) {\n  return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n  return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n  return 3.0 * a1;\n};\nvar calcBezier = function (t, a1, a2) {\n  return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function (t, a1, a2) {\n  return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n  var currentX;\n  var currentT;\n  var i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n  return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n  for (var i = 0; i < newtonIterations; ++i) {\n    var currentSlope = getSlope(aGuessT, mX1, mX2);\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n  return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n  if (mX1 === mY1 && mX2 === mY2) return linear;\n  var sampleValues = new Float32Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n  function getTForX(aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= newtonMinSlope) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n  return function (t) {\n    return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n  };\n}\nvar steps = function (steps, direction) {\n  if (direction === void 0) {\n    direction = 'end';\n  }\n  return function (progress) {\n    progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n    var expanded = progress * steps;\n    var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n  };\n};\nexports.angle = angle;\nexports.animate = animate;\nexports.anticipate = anticipate;\nexports.applyOffset = applyOffset;\nexports.attract = attract;\nexports.attractExpo = attractExpo;\nexports.backIn = backIn;\nexports.backInOut = backInOut;\nexports.backOut = backOut;\nexports.bounceIn = bounceIn;\nexports.bounceInOut = bounceInOut;\nexports.bounceOut = bounceOut;\nexports.circIn = circIn;\nexports.circInOut = circInOut;\nexports.circOut = circOut;\nexports.clamp = clamp;\nexports.createAnticipate = createAnticipate;\nexports.createAttractor = createAttractor;\nexports.createBackIn = createBackIn;\nexports.createExpoIn = createExpoIn;\nexports.cubicBezier = cubicBezier;\nexports.decay = decay;\nexports.degreesToRadians = degreesToRadians;\nexports.distance = distance;\nexports.easeIn = easeIn;\nexports.easeInOut = easeInOut;\nexports.easeOut = easeOut;\nexports.inertia = inertia;\nexports.interpolate = interpolate;\nexports.isPoint = isPoint;\nexports.isPoint3D = isPoint3D;\nexports.keyframes = keyframes;\nexports.linear = linear;\nexports.mirrorEasing = mirrorEasing;\nexports.mix = mix;\nexports.mixColor = mixColor;\nexports.mixComplex = mixComplex;\nexports.pipe = pipe;\nexports.pointFromVector = pointFromVector;\nexports.progress = progress;\nexports.radiansToDegrees = radiansToDegrees;\nexports.reverseEasing = reverseEasing;\nexports.smooth = smooth;\nexports.smoothFrame = smoothFrame;\nexports.snap = snap;\nexports.spring = spring;\nexports.steps = steps;\nexports.toDecimal = toDecimal;\nexports.velocityPerFrame = velocityPerFrame;\nexports.velocityPerSecond = velocityPerSecond;\nexports.wrap = wrap;","map":{"version":3,"names":["Object","defineProperty","exports","value","tslib","require","heyListen","styleValueTypes","sync","_interopDefaultLegacy","e","sync__default","clamp","min","max","v","Math","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","_a","_b","duration","_c","bounce","_d","velocity","_e","mass","envelope","derivative","warning","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","pow","f","g","factor","initialGuess","approximateRoot","isNaN","stiffness","damping","sqrt","rootIterations","result","i","durationKeys","physicsKeys","isSpringType","options","keys","some","key","undefined","getSpringOptions","springOptions","__assign","isResolvedFromDuration","derived","spring","from","to","restSpeed","restDelta","__rest","state","done","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","abs","angularFreq_1","t","sin","cos","dampedAngularFreq_1","freqForT","sinh","cosh","next","current","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","progress","toFromDifference","mix","mixLinearColor","fromExpo","toExpo","colorTypes","hex","rgba","hsla","getColorType","find","type","test","notAnimatable","color","mixColor","fromColorType","toColorType","invariant","transform","fromColor","parse","toColor","blended","mixFunc","alpha","zeroPoint","x","y","z","isNum","combineFunctions","pipe","transformers","_i","arguments","length","reduce","getMixer","origin","target","mixComplex","mixArray","output","__spreadArray","numValues","blendValue","map","fromThis","mixObject","analyse","parsed","complex","numNumbers","numRGB","numHSL","hue","template","createTransformer","originStats","targetStats","mixNumber","p","detectMixerFactory","Array","isArray","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","fastInterpolate","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","isClamp","concat","reverse","interpolator","reverseEasing","easing","mirrorEasing","createExpoIn","power","createBackIn","createAnticipate","backEasing","DEFAULT_OVERSHOOT_STRENGTH","BOUNCE_FIRST_THRESHOLD","BOUNCE_SECOND_THRESHOLD","BOUNCE_THIRD_THRESHOLD","linear","easeIn","easeOut","easeInOut","circIn","acos","circOut","circInOut","backIn","backOut","backInOut","anticipate","ca","cb","cc","bounceOut","p2","bounceIn","bounceInOut","defaultEasing","values","splice","defaultOffset","_value","convertOffsetToTimes","offset","o","keyframes","times","createInterpolator","decay","timeConstant","_f","modifyTarget","amplitude","ideal","types","detectAnimationFromOptions","config","Set","has","loopElapsed","elapsed","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","update","passTimestamp","start","stop","cancelSync","animate","autoplay","driver","_g","repeat","repeatMax","_h","repeatType","_j","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","repeatCount","computedDuration","latest","isComplete","interpolateFromNumber","animator","call","animation","complete","play","velocityPerSecond","frameDuration","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary_1","heading_1","prev_1","current_1","checkBoundary","getFrameData","radiansToDegrees","radians","PI","angle","atan2","applyOffset","hasReceivedFrom","identity","createAttractor","alterDisplacement","constant","displacement","springModifiedDisplacement","attract","attractExpo","degreesToRadians","degrees","isPoint","point","hasOwnProperty","isPoint3D","distance1D","distance","xDelta","yDelta","zDelta","pointFromVector","toDecimal","num","precision","round","smoothFrame","prevValue","nextValue","smoothing","smooth","strength","previousValue","lastUpdated","currentFramestamp","timestamp","timeDelta","newValue","snap","points","i_1","numPoints_1","lastDistance","velocityPerFrame","xps","wrap","rangeSize","a1","a2","calcBezier","getSlope","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonIterations","newtonMinSlope","newtonRaphsonIterate","aGuessT","currentSlope","kSplineTableSize","kSampleStepSize","cubicBezier","mY1","mY2","sampleValues","Float32Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","steps","direction","expanded","rounded","floor","ceil"],"sources":["/Users/arshadyaseen/Desktop/ReactFromValidator/form-validation-react/node_modules/popmotion/dist/popmotion.cjs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar heyListen = require('hey-listen');\nvar styleValueTypes = require('style-value-types');\nvar sync = require('framesync');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar sync__default = /*#__PURE__*/_interopDefaultLegacy(sync);\n\nvar clamp = function (min, max, v) {\n    return Math.min(Math.max(v, min), max);\n};\n\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\nfunction findSpring(_a) {\n    var _b = _a.duration, duration = _b === void 0 ? 800 : _b, _c = _a.bounce, bounce = _c === void 0 ? 0.25 : _c, _d = _a.velocity, velocity = _d === void 0 ? 0 : _d, _e = _a.mass, mass = _e === void 0 ? 1 : _e;\n    var envelope;\n    var derivative;\n    heyListen.warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    var dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var a = exponentialDecay - velocity;\n            var b = calcAngularFreq(undampedFreq, dampingRatio);\n            var c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var d = delta * velocity + velocity;\n            var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            var f = Math.exp(-delta);\n            var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        envelope = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    var initialGuess = 5 / duration;\n    var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration: duration,\n        };\n    }\n    else {\n        var stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness: stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration: duration,\n        };\n    }\n}\nvar rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    var result = initialGuess;\n    for (var i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some(function (key) { return options[key] !== undefined; });\n}\nfunction getSpringOptions(options) {\n    var springOptions = tslib.__assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        var derived = findSpring(options);\n        springOptions = tslib.__assign(tslib.__assign(tslib.__assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0.0 : _b, _c = _a.to, to = _c === void 0 ? 1.0 : _c, _d = _a.restSpeed, restSpeed = _d === void 0 ? 2 : _d, restDelta = _a.restDelta, options = tslib.__rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    var state = { done: false, value: from };\n    var _e = getSpringOptions(options), stiffness = _e.stiffness, damping = _e.damping, mass = _e.mass, velocity = _e.velocity, duration = _e.duration, isResolvedFromDuration = _e.isResolvedFromDuration;\n    var resolveSpring = zero;\n    var resolveVelocity = zero;\n    function createSpring() {\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var initialDelta = to - from;\n        var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        restDelta !== null && restDelta !== void 0 ? restDelta : (restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4);\n        if (dampingRatio < 1) {\n            var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq_1) *\n                            Math.sin(angularFreq_1 * t) +\n                            initialDelta * Math.cos(angularFreq_1 * t)));\n            };\n            resolveVelocity = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq_1 * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq_1 +\n                        initialDelta * Math.cos(angularFreq_1 * t)) -\n                    envelope *\n                        (Math.cos(angularFreq_1 * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq_1 *\n                                initialDelta *\n                                Math.sin(angularFreq_1 * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            resolveSpring = function (t) {\n                return to -\n                    Math.exp(-undampedAngularFreq * t) *\n                        (initialDelta +\n                            (initialVelocity + undampedAngularFreq * initialDelta) *\n                                t);\n            };\n        }\n        else {\n            var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq_1 *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq_1);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: function (t) {\n            var current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                var currentVelocity = resolveVelocity(t) * 1000;\n                var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: function () {\n            var _a;\n            velocity = -velocity;\n            _a = [to, from], from = _a[0], to = _a[1];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = function (a, b) {\n    return typeof a === \"string\" || typeof b === \"string\";\n};\nvar zero = function (_t) { return 0; };\n\nvar progress = function (from, to, value) {\n    var toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n    return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [styleValueTypes.hex, styleValueTypes.rgba, styleValueTypes.hsla];\nvar getColorType = function (v) {\n    return colorTypes.find(function (type) { return type.test(v); });\n};\nvar notAnimatable = function (color) {\n    return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function (from, to) {\n    var fromColorType = getColorType(from);\n    var toColorType = getColorType(to);\n    heyListen.invariant(!!fromColorType, notAnimatable(from));\n    heyListen.invariant(!!toColorType, notAnimatable(to));\n    heyListen.invariant(fromColorType.transform === toColorType.transform, \"Both colors must be hex/RGBA, OR both must be HSLA.\");\n    var fromColor = fromColorType.parse(from);\n    var toColor = toColorType.parse(to);\n    var blended = tslib.__assign({}, fromColor);\n    var mixFunc = fromColorType === styleValueTypes.hsla ? mix : mixLinearColor;\n    return function (v) {\n        for (var key in blended) {\n            if (key !== \"alpha\") {\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nvar zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nvar isNum = function (v) { return typeof v === 'number'; };\n\nvar combineFunctions = function (a, b) { return function (v) { return b(a(v)); }; };\nvar pipe = function () {\n    var transformers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transformers[_i] = arguments[_i];\n    }\n    return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return function (v) { return mix(origin, target, v); };\n    }\n    else if (styleValueTypes.color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nvar mixArray = function (from, to) {\n    var output = tslib.__spreadArray([], from);\n    var numValues = output.length;\n    var blendValue = from.map(function (fromThis, i) { return getMixer(fromThis, to[i]); });\n    return function (v) {\n        for (var i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nvar mixObject = function (origin, target) {\n    var output = tslib.__assign(tslib.__assign({}, origin), target);\n    var blendValue = {};\n    for (var key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return function (v) {\n        for (var key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    var parsed = styleValueTypes.complex.parse(value);\n    var numValues = parsed.length;\n    var numNumbers = 0;\n    var numRGB = 0;\n    var numHSL = 0;\n    for (var i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            }\n            else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\n}\nvar mixComplex = function (origin, target) {\n    var template = styleValueTypes.complex.createTransformer(target);\n    var originStats = analyse(origin);\n    var targetStats = analyse(target);\n    heyListen.invariant(originStats.numHSL === targetStats.numHSL &&\n        originStats.numRGB === targetStats.numRGB &&\n        originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar mixNumber = function (from, to) { return function (p) { return mix(from, to, p); }; };\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    }\n    else if (typeof v === 'string') {\n        if (styleValueTypes.color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    var mixers = [];\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\n    var numMixers = output.length - 1;\n    for (var i = 0; i < numMixers; i++) {\n        var mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n    var from = _a[0], to = _a[1];\n    var mixer = _b[0];\n    return function (v) { return mixer(progress(from, to, v)); };\n}\nfunction slowInterpolate(input, mixers) {\n    var inputLength = input.length;\n    var lastInputIndex = inputLength - 1;\n    return function (v) {\n        var mixerIndex = 0;\n        var foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        }\n        else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            var i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.clamp, isClamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;\n    var inputLength = input.length;\n    heyListen.invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    heyListen.invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    var mixers = createMixers(output, ease, mixer);\n    var interpolator = inputLength === 2\n        ? fastInterpolate(input, mixers)\n        : slowInterpolate(input, mixers);\n    return isClamp\n        ? function (v) { return interpolator(clamp(input[0], input[inputLength - 1], v)); }\n        : interpolator;\n}\n\nvar reverseEasing = function (easing) { return function (p) { return 1 - easing(1 - p); }; };\nvar mirrorEasing = function (easing) { return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n}; };\nvar createExpoIn = function (power) { return function (p) { return Math.pow(p, power); }; };\nvar createBackIn = function (power) { return function (p) {\n    return p * p * ((power + 1) * p - power);\n}; };\nvar createAnticipate = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1\n            ? 0.5 * backEasing(p)\n            : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar linear = function (p) { return p; };\nvar easeIn = createExpoIn(2);\nvar easeOut = reverseEasing(easeIn);\nvar easeInOut = mirrorEasing(easeIn);\nvar circIn = function (p) { return 1 - Math.sin(Math.acos(p)); };\nvar circOut = reverseEasing(circIn);\nvar circInOut = mirrorEasing(circOut);\nvar backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = reverseEasing(backIn);\nvar backInOut = mirrorEasing(backIn);\nvar anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    if (p === 1 || p === 0)\n        return p;\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD\n        ? 7.5625 * p2\n        : p < BOUNCE_SECOND_THRESHOLD\n            ? 9.075 * p2 - 9.9 * p + 3.4\n            : p < BOUNCE_THIRD_THRESHOLD\n                ? ca * p2 - cb * p + cc\n                : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = reverseEasing(bounceOut);\nvar bounceInOut = function (p) {\n    return p < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0))\n        : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n    return values.map(function () { return easing || easeInOut; }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    var numValues = values.length;\n    return values.map(function (_value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map(function (o) { return o * duration; });\n}\nfunction keyframes(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c, ease = _a.ease, offset = _a.offset, _d = _a.duration, duration = _d === void 0 ? 300 : _d;\n    var state = { done: false, value: from };\n    var values = Array.isArray(to) ? to : [from, to];\n    var times = convertOffsetToTimes(offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    var interpolator = createInterpolator();\n    return {\n        next: function (t) {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: function () {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nfunction decay(_a) {\n    var _b = _a.velocity, velocity = _b === void 0 ? 0 : _b, _c = _a.from, from = _c === void 0 ? 0 : _c, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant = _e === void 0 ? 350 : _e, _f = _a.restDelta, restDelta = _f === void 0 ? 0.5 : _f, modifyTarget = _a.modifyTarget;\n    var state = { done: false, value: from };\n    var amplitude = power * velocity;\n    var ideal = from + amplitude;\n    var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: function (t) {\n            var delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: function () { },\n    };\n}\n\nvar types = { keyframes: keyframes, spring: spring, decay: decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    }\n    else if (types[config.type]) {\n        return types[config.type];\n    }\n    var keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") ||\n        (keys.has(\"duration\") && !keys.has(\"dampingRatio\"))) {\n        return keyframes;\n    }\n    else if (keys.has(\"dampingRatio\") ||\n        keys.has(\"stiffness\") ||\n        keys.has(\"mass\") ||\n        keys.has(\"damping\") ||\n        keys.has(\"restSpeed\") ||\n        keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n    if (delay === void 0) { delay = 0; }\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n    if (delay === void 0) { delay = 0; }\n    if (isForwardPlayback === void 0) { isForwardPlayback = true; }\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n    var passTimestamp = function (_a) {\n        var delta = _a.delta;\n        return update(delta);\n    };\n    return {\n        start: function () { return sync__default['default'].update(passTimestamp, true); },\n        stop: function () { return sync.cancelSync.update(passTimestamp); },\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var from = _a.from, _d = _a.autoplay, autoplay = _d === void 0 ? true : _d, _e = _a.driver, driver = _e === void 0 ? framesync : _e, _f = _a.elapsed, elapsed = _f === void 0 ? 0 : _f, _g = _a.repeat, repeatMax = _g === void 0 ? 0 : _g, _h = _a.repeatType, repeatType = _h === void 0 ? \"loop\" : _h, _j = _a.repeatDelay, repeatDelay = _j === void 0 ? 0 : _j, onPlay = _a.onPlay, onStop = _a.onStop, onComplete = _a.onComplete, onRepeat = _a.onRepeat, onUpdate = _a.onUpdate, options = tslib.__rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    var to = options.to;\n    var driverControls;\n    var repeatCount = 0;\n    var computedDuration = options.duration;\n    var latest;\n    var isComplete = false;\n    var isForwardPlayback = true;\n    var interpolateFromNumber;\n    var animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    var animation = animator(tslib.__assign(tslib.__assign({}, options), { from: from, to: to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            var state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: function () {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.velocity, velocity = _c === void 0 ? 0 : _c, min = _a.min, max = _a.max, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant = _e === void 0 ? 750 : _e, _f = _a.bounceStiffness, bounceStiffness = _f === void 0 ? 500 : _f, _g = _a.bounceDamping, bounceDamping = _g === void 0 ? 10 : _g, _h = _a.restDelta, restDelta = _h === void 0 ? 1 : _h, modifyTarget = _a.modifyTarget, driver = _a.driver, onUpdate = _a.onUpdate, onComplete = _a.onComplete;\n    var currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(tslib.__assign(tslib.__assign({}, options), { driver: driver, onUpdate: function (v) {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete: onComplete }));\n    }\n    function startSpring(options) {\n        startAnimation(tslib.__assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });\n    }\n    else {\n        var target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        var boundary_1 = boundaryNearest(target);\n        var heading_1 = boundary_1 === min ? -1 : 1;\n        var prev_1;\n        var current_1;\n        var checkBoundary = function (v) {\n            prev_1 = current_1;\n            current_1 = v;\n            velocity = velocityPerSecond(v - prev_1, sync.getFrameData().delta);\n            if ((heading_1 === 1 && v > boundary_1) ||\n                (heading_1 === -1 && v < boundary_1)) {\n                startSpring({ from: v, to: boundary_1, velocity: velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from: from,\n            velocity: velocity,\n            timeConstant: timeConstant,\n            power: power,\n            restDelta: restDelta,\n            modifyTarget: modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: function () { return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(); },\n    };\n}\n\nvar radiansToDegrees = function (radians) { return (radians * 180) / Math.PI; };\n\nvar angle = function (a, b) {\n    if (b === void 0) { b = zeroPoint; }\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n    var hasReceivedFrom = true;\n    if (to === undefined) {\n        to = from;\n        hasReceivedFrom = false;\n    }\n    return function (v) {\n        if (hasReceivedFrom) {\n            return v - from + to;\n        }\n        else {\n            from = v;\n            hasReceivedFrom = true;\n            return to;\n        }\n    };\n};\n\nvar identity = function (v) { return v; };\nvar createAttractor = function (alterDisplacement) {\n    if (alterDisplacement === void 0) { alterDisplacement = identity; }\n    return function (constant, origin, v) {\n        var displacement = origin - v;\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n        return displacement <= 0\n            ? origin + springModifiedDisplacement\n            : origin - springModifiedDisplacement;\n    };\n};\nvar attract = createAttractor();\nvar attractExpo = createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) { return (degrees * Math.PI) / 180; };\n\nvar isPoint = function (point) {\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n    return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) { return Math.abs(a - b); };\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (isPoint(a) && isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n    angle = degreesToRadians(angle);\n    return {\n        x: distance * Math.cos(angle) + origin.x,\n        y: distance * Math.sin(angle) + origin.y\n    };\n};\n\nvar toDecimal = function (num, precision) {\n    if (precision === void 0) { precision = 2; }\n    precision = Math.pow(10, precision);\n    return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n    if (smoothing === void 0) { smoothing = 0; }\n    return toDecimal(prevValue +\n        (duration * (nextValue - prevValue)) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n    if (strength === void 0) { strength = 50; }\n    var previousValue = 0;\n    var lastUpdated = 0;\n    return function (v) {\n        var currentFramestamp = sync.getFrameData().timestamp;\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n        var newValue = timeDelta\n            ? smoothFrame(previousValue, v, timeDelta, strength)\n            : previousValue;\n        lastUpdated = currentFramestamp;\n        previousValue = newValue;\n        return newValue;\n    };\n};\n\nvar snap = function (points) {\n    if (typeof points === 'number') {\n        return function (v) { return Math.round(v / points) * points; };\n    }\n    else {\n        var i_1 = 0;\n        var numPoints_1 = points.length;\n        return function (v) {\n            var lastDistance = Math.abs(points[0] - v);\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n                var point = points[i_1];\n                var distance = Math.abs(point - v);\n                if (distance === 0)\n                    return point;\n                if (distance > lastDistance)\n                    return points[i_1 - 1];\n                if (i_1 === numPoints_1 - 1)\n                    return point;\n                lastDistance = distance;\n            }\n        };\n    }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n    return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n    var rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nvar a = function (a1, a2) { return 1.0 - 3.0 * a2 + 3.0 * a1; };\nvar b = function (a1, a2) { return 3.0 * a2 - 6.0 * a1; };\nvar c = function (a1) { return 3.0 * a1; };\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX;\n    var currentT;\n    var i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        }\n        else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < newtonIterations; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2)\n        return linear;\n    var sampleValues = new Float32Array(kSplineTableSize);\n    for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function (t) {\n        return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n    };\n}\n\nvar steps = function (steps, direction) {\n    if (direction === void 0) { direction = 'end'; }\n    return function (progress) {\n        progress =\n            direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n        var expanded = progress * steps;\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n        return clamp(0, 1, rounded / steps);\n    };\n};\n\nexports.angle = angle;\nexports.animate = animate;\nexports.anticipate = anticipate;\nexports.applyOffset = applyOffset;\nexports.attract = attract;\nexports.attractExpo = attractExpo;\nexports.backIn = backIn;\nexports.backInOut = backInOut;\nexports.backOut = backOut;\nexports.bounceIn = bounceIn;\nexports.bounceInOut = bounceInOut;\nexports.bounceOut = bounceOut;\nexports.circIn = circIn;\nexports.circInOut = circInOut;\nexports.circOut = circOut;\nexports.clamp = clamp;\nexports.createAnticipate = createAnticipate;\nexports.createAttractor = createAttractor;\nexports.createBackIn = createBackIn;\nexports.createExpoIn = createExpoIn;\nexports.cubicBezier = cubicBezier;\nexports.decay = decay;\nexports.degreesToRadians = degreesToRadians;\nexports.distance = distance;\nexports.easeIn = easeIn;\nexports.easeInOut = easeInOut;\nexports.easeOut = easeOut;\nexports.inertia = inertia;\nexports.interpolate = interpolate;\nexports.isPoint = isPoint;\nexports.isPoint3D = isPoint3D;\nexports.keyframes = keyframes;\nexports.linear = linear;\nexports.mirrorEasing = mirrorEasing;\nexports.mix = mix;\nexports.mixColor = mixColor;\nexports.mixComplex = mixComplex;\nexports.pipe = pipe;\nexports.pointFromVector = pointFromVector;\nexports.progress = progress;\nexports.radiansToDegrees = radiansToDegrees;\nexports.reverseEasing = reverseEasing;\nexports.smooth = smooth;\nexports.smoothFrame = smoothFrame;\nexports.snap = snap;\nexports.spring = spring;\nexports.steps = steps;\nexports.toDecimal = toDecimal;\nexports.velocityPerFrame = velocityPerFrame;\nexports.velocityPerSecond = velocityPerSecond;\nexports.wrap = wrap;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}