{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar react_1 = __importDefault(require(\"react\"));\nvar countryCodeRegexMap = {\n  US: /^(\\+?1)?[2-9]\\d{9}$/,\n  CA: /^(\\+?1)?[2-9]\\d{9}$/,\n  MX: /^(\\+?52)?(1)?\\d{10}$/,\n  GB: /^(\\+?44|0)7\\d{9}$/,\n  FR: /^(\\+?33|0)[67]\\d{8}$/,\n  DE: /^(\\+49|0)[1-9]\\d{10}$/,\n  JP: /^(\\+?81|0)\\d{1,4}[ \\-]?\\d{1,4}[ \\-]?\\d{4}$/,\n  AU: /^(\\+?61|0)[45789]\\d{8}$/,\n  NZ: /^(\\+?64|0)[28]\\d{7,9}$/,\n  IN: /^(\\+?91|0)?[6789]\\d{9}$/,\n  CN: /^(\\+?0?86\\-?)?1[3456789]\\d{9}$/,\n  HK: /^(\\+?852\\-?)?[569]\\d{3}\\-?\\d{4}$/,\n  SG: /^(\\+65)?[89]\\d{7}$/,\n  TW: /^(\\+?886\\-?|0)?9\\d{8}$/,\n  KR: /^(\\+?82|0)?1[0-9]{1,2}-?[0-9]{3,4}-?[0-9]{4}$/,\n  TH: /^(\\+66|66|0)\\d{8}$/,\n  PH: /^(\\+?63|0)?[89]\\d{9}$/,\n  VN: /^(\\+?84|0)?[1-9]\\d{8}$/,\n  MY: /^(\\+?6?01){1}(([145]{1}(-|\\s)?\\d{7,8})|([236789]{1}(\\s|-)?\\d{7}))$/,\n  BE: /^(\\+?32|0)4?\\d{8}$/,\n  NL: /^(\\+?31|0)6?\\d{8}$/,\n  IT: /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\n  ES: /^(\\+?34)?[-. ]?6\\d{8}$/,\n  PT: /^(\\+351)?9[1236]\\d{7}$/,\n  AT: /^(\\+43|0)\\d{1,4}\\d{3,12}$/,\n  CH: /^(\\+41|0)([1-9])\\d{1,12}$/,\n  SE: /^(\\+?46|0)7\\d{8}$/,\n  NO: /^(\\+?47)?[49]\\d{7}$/,\n  DK: /^(\\+?45)?(\\d{8})$/,\n  FI: /^(\\+?358|0)\\s?(4(0|1|2|4|5)|50|4(6|7)|[5-7]|9\\d)\\s?\\d{6,7}$/,\n  BR: /^(\\+?55|0)?([1-9]{2})?([6-9]{1})(\\d{8})$/,\n  AR: /^(\\+?54|0)?([1-9])?([1-9])(\\d{7,8})$/,\n  CO: /^(\\+?57|0)?([1-8]{1})?([2-4]{1})(\\d{7})$/,\n  PE: /^(\\+?51|0)?([1-9]{2})?([1-9]{1})(\\d{7})$/,\n  CL: /^(\\+?56|0)?([2-9]{1})?([2-9])(\\d{6,7})$/,\n  VE: /^(\\+?58|0)?([4]{1})(1|2|4|6)(\\d{7})$/,\n  CR: /^(\\+?506)?([2-8]{1})(\\d{7})$/,\n  PA: /^(\\+?507)?([2-8]{1})(\\d{7})$/,\n  DO: /^(\\+?1|0)?([8]{1})(0|1)(\\d{7})$/,\n  GT: /^(\\+?502)?([23]{1})(\\d{7})$/,\n  EC: /^(\\+?593|0)([679]{1})(\\d{7})$/,\n  UY: /^(\\+?598|0)([4]{1}[2-9]{1}|[5-9]{1})(\\d{6})$/,\n  PY: /^(\\+?595|0)([9]{1})([1-9]{1})(\\d{6})$/,\n  BO: /^(\\+?591)?([267]{1})(\\d{7})$/,\n  HN: /^(\\+?504)?([239]{1})(\\d{7})$/,\n  NI: /^(\\+?505)?([5689]{1})(\\d{7})$/,\n  SV: /^(\\+?503)?([67]{1})(\\d{7})$/,\n  PR: /^(\\+?1)?([0]{1}[78]{1}|[2367]{1})(\\d{7})$/,\n  JM: /^(\\+?1)?([8]{1}[79]{1}|[45]{1}[67]{1})(\\d{7})$/,\n  BB: /^(\\+?1)?([246]{1})(\\d{7})$/,\n  KY: /^(\\+?1)?([345]{1}([01]{1}|[69]{1})|[24]{1}([26]{1}|[46]{1})|[78]{1}([4]{1}|[5]{1}|[7]{1}|[9]{1}))(\\d{6})$/,\n  VG: /^(\\+?1)?([284]{1})(\\d{7})$/,\n  TT: /^(\\+?1)?([868]{1})(\\d{7})$/,\n  DM: /^(\\+?1)?([767]{1})(\\d{7})$/,\n  GD: /^(\\+?1)?([473]{1})(\\d{7})$/,\n  GH: /^(\\+?233|0)?([23]0|[57][0567]|6[679]|8[124567])(\\d{7})$/,\n  KE: /^(\\+?254|0)?([17](0|1|[3-9])[0-9]{6}|([2-9]|[4-6][0-9])[0-9]{6,7})$/,\n  NG: /^(\\+?234|0)?[789]\\d{9}$/,\n  UG: /^(\\+?256|0)?([39]0|[47][057]|[568][056]|[7-9][089])(\\d{7})$/,\n  RW: /^(\\+?250|0)?[7]\\d{8}$/,\n  CM: /^(\\+?237|0)?(6[57]|2[2368]|3[89]|4[6-8]|[78]0|\\d{2})(\\d{6,7})$/,\n  SN: /^(\\+?221|0)?[76][05](\\d{7}|\\d{8})$/,\n  TZ: /^(\\+?255|0)?[67]\\d{8}$/,\n  CI: /^(\\+?225|0)?[017]\\d{7}$/,\n  MG: /^(\\+?261|0)?[2368]\\d{7}$/,\n  ZM: /^(\\+?26[01]|0)?[567]\\d{8}$/,\n  ZW: /^(\\+?263|0)?[17]\\d{8}$/,\n  MW: /^(\\+?265|0)?[11768]\\d{7}$/,\n  LS: /^(\\+?266|0)?[5-8]\\d{7}$/,\n  SZ: /^(\\+?268|0)?[7]\\d{7}$/,\n  KM: /^(\\+?269|0)?[269]\\d{7}$/,\n  DJ: /^(\\+?253|0)?[77-9](\\d{6})$/,\n  RE: /^(\\+?262|0)?[269]\\d{8}$/,\n  YT: /^(\\+?262|0)?[639]\\d{8}$/,\n  WF: /^(\\+?681|0)?\\d{6}$/,\n  NU: /^(\\+?683|0)?\\d{4}$/,\n  TK: /^(\\+?690|0)?\\d{4}$/,\n  FM: /^(\\+?691|0)?[1-9]\\d{3}$/,\n  MH: /^(\\+?692|0)?\\d{7}$/,\n  SA: /^(\\+?966|0)?5[0-9]{8}$/,\n  RU: /^(\\+?7|8)?9\\d{9}$/\n};\nvar ValidateForm = /** @class */function (_super) {\n  __extends(ValidateForm, _super);\n  function ValidateForm() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ValidateForm.prototype.componentDidMount = function () {\n    this.init();\n  };\n  ValidateForm.prototype.componentDidUpdate = function (prevProps) {\n    if (this.props.rules !== prevProps.rules) {\n      this.init();\n    }\n  };\n  ValidateForm.prototype.init = function () {\n    var rules = this.props.rules;\n    var errorElement = this.props.errorElement;\n    var allowedKeys = [\"validateRequired\", \"ValidateMinMax\", \"ValidateEmail\", \"ValidatePattern\", \"ValidatePhone\"];\n    var wrapper = document.getElementById(\"_validation_wrapper\");\n    var form = wrapper === null || wrapper === void 0 ? void 0 : wrapper.children[0];\n    var submit_button = form.querySelector('button[type=\"submit\"]') || form.querySelector('input[type=\"submit\"]');\n    var errorText = document.querySelector(errorElement);\n    var errorMessage = String;\n    submit_button.addEventListener(\"submit\", function () {\n      if ((errorText === null || errorText === void 0 ? void 0 : errorText.innerText) === \"\") {\n        form.submit();\n      }\n    });\n    var setErrorText = function (message) {\n      if (errorText) {\n        errorText.innerText = message;\n      }\n    };\n    var runValidateRequired = function () {\n      // Check If All Required Feilds Filled\n      form.addEventListener(\"input\", function (event) {\n        var input = event.target;\n        input.style.borderColor = \"\";\n      });\n      var submit_button = (form === null || form === void 0 ? void 0 : form.querySelector('button[type=\"submit\"]')) || (form === null || form === void 0 ? void 0 : form.querySelector('input[type=\"submit\"]'));\n      submit_button === null || submit_button === void 0 ? void 0 : submit_button.addEventListener(\"click\", function (event) {\n        var _a, _b, _c, _d;\n        event.preventDefault();\n        var requiredInputs = [];\n        if ((_a = rules.validateRequired) === null || _a === void 0 ? void 0 : _a.applyOnly) {\n          (_b = rules.validateRequired) === null || _b === void 0 ? void 0 : _b.applyOnly.forEach(function (inputName) {\n            requiredInputs.push(form === null || form === void 0 ? void 0 : form.querySelector(\"[name=\\\"\".concat(inputName, \"\\\"]\")));\n          });\n        } else {\n          form === null || form === void 0 ? void 0 : form.querySelectorAll(\"input[required]\").forEach(function (input) {\n            requiredInputs.push(input);\n          });\n        }\n        var missingInputs = [];\n        requiredInputs === null || requiredInputs === void 0 ? void 0 : requiredInputs.forEach(function (input) {\n          if (!input.value) {\n            missingInputs.push(input);\n          }\n        });\n        if (missingInputs.length > 0) {\n          missingInputs.forEach(function (input, index) {\n            var _a, _b, _c, _d, _e, _f, _g;\n            if ((_a = rules.validateRequired) === null || _a === void 0 ? void 0 : _a.notvalidated) {\n              (_b = rules.validateRequired) === null || _b === void 0 ? void 0 : _b.notvalidated(missingInputs);\n            }\n            if (index === 0) {\n              input.focus();\n            }\n            if (((_c = rules.validateRequired) === null || _c === void 0 ? void 0 : _c.action) === \"input_red_border\") {\n              if (input.style.border) {\n                input.style.borderColor = \"red\";\n              } else {\n                input.style.border = \"1px solid red\";\n              }\n            } else if (((_d = rules.validateRequired) === null || _d === void 0 ? void 0 : _d.action) === \"show_error_message\") {\n              if (rules.validateRequired.message) {\n                setErrorText(rules.validateRequired.message);\n              }\n            } else if (((_e = rules.validateRequired) === null || _e === void 0 ? void 0 : _e.action) === \"both\") {\n              if ((_f = rules.validateRequired) === null || _f === void 0 ? void 0 : _f.message) {\n                setErrorText((_g = rules.validateRequired) === null || _g === void 0 ? void 0 : _g.message);\n              }\n              if (input.style.border) {\n                input.style.borderColor = \"red\";\n              } else {\n                input.style.border = \"1px solid red\";\n              }\n            }\n          });\n        } else {\n          if (errorText) {\n            errorText.innerText = \"\";\n          }\n          if ((_c = rules.validateRequired) === null || _c === void 0 ? void 0 : _c.onsuccess) {\n            (_d = rules.validateRequired) === null || _d === void 0 ? void 0 : _d.onsuccess();\n          } else {\n            if (errorText.innerText === \"\") {\n              form.submit();\n            }\n          }\n        }\n      });\n    };\n    var runValidateMinMax = function () {\n      var _a, _b;\n      var inputs = form.querySelectorAll(\"input[min][max]\");\n      if (((_a = rules.ValidateMinMax) === null || _a === void 0 ? void 0 : _a.when) === \"typing\") {\n        inputs.forEach(function (input) {\n          input.addEventListener(\"input\", function (event) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v;\n            var input = event.target;\n            var min = input.min;\n            var max = input.max;\n            var value = input.value;\n            var type = input.type;\n            var inputMinMessage = input.getAttribute(\"data-min-message\");\n            var inputMaxMessage = input.getAttribute(\"data-max-message\");\n            if (min && max) {\n              if (type === \"number\") {\n                if (value < min) {\n                  if ((_a = rules.ValidateMinMax) === null || _a === void 0 ? void 0 : _a.exceedsMin) {\n                    (_b = rules.ValidateMinMax) === null || _b === void 0 ? void 0 : _b.exceedsMin(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMinMessage) {\n                    setErrorText(inputMinMessage);\n                  } else {\n                    if ((_c = rules.ValidateMinMax) === null || _c === void 0 ? void 0 : _c.message) {\n                      setErrorText((_d = rules.ValidateMinMax) === null || _d === void 0 ? void 0 : _d.message.min);\n                    }\n                  }\n                } else if (value > max) {\n                  if ((_e = rules.ValidateMinMax) === null || _e === void 0 ? void 0 : _e.exceedsMax) {\n                    (_f = rules.ValidateMinMax) === null || _f === void 0 ? void 0 : _f.exceedsMax(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMaxMessage) {\n                    setErrorText(inputMaxMessage);\n                  } else {\n                    if ((_g = rules.ValidateMinMax) === null || _g === void 0 ? void 0 : _g.message) {\n                      setErrorText((_h = rules.ValidateMinMax) === null || _h === void 0 ? void 0 : _h.message.max);\n                    }\n                  }\n                } else {\n                  input.style.borderColor = \"\";\n                  if (errorText) {\n                    errorText.innerText = \"\";\n                  }\n                  if ((_j = rules.ValidateMinMax) === null || _j === void 0 ? void 0 : _j.onsuccess) {\n                    (_k = rules.ValidateMinMax) === null || _k === void 0 ? void 0 : _k.onsuccess(input);\n                  }\n                }\n              } else if (type === \"text\") {\n                if (value.length < Number(min)) {\n                  if ((_l = rules.ValidateMinMax) === null || _l === void 0 ? void 0 : _l.exceedsMin) {\n                    (_m = rules.ValidateMinMax) === null || _m === void 0 ? void 0 : _m.exceedsMin(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMinMessage) {\n                    setErrorText(inputMinMessage);\n                  } else {\n                    if ((_o = rules.ValidateMinMax) === null || _o === void 0 ? void 0 : _o.message) {\n                      setErrorText((_p = rules.ValidateMinMax) === null || _p === void 0 ? void 0 : _p.message.min);\n                    }\n                  }\n                } else if (value.length > Number(max)) {\n                  if ((_q = rules.ValidateMinMax) === null || _q === void 0 ? void 0 : _q.exceedsMax) {\n                    (_r = rules.ValidateMinMax) === null || _r === void 0 ? void 0 : _r.exceedsMax(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMaxMessage) {\n                    setErrorText(inputMaxMessage);\n                  } else {\n                    if ((_s = rules.ValidateMinMax) === null || _s === void 0 ? void 0 : _s.message) {\n                      setErrorText((_t = rules.ValidateMinMax) === null || _t === void 0 ? void 0 : _t.message.max);\n                    }\n                  }\n                } else {\n                  input.style.borderColor = \"\";\n                  if (errorText) {\n                    errorText.innerText = \"\";\n                  }\n                  if ((_u = rules.ValidateMinMax) === null || _u === void 0 ? void 0 : _u.onsuccess) {\n                    (_v = rules.ValidateMinMax) === null || _v === void 0 ? void 0 : _v.onsuccess(input);\n                  }\n                }\n              }\n            }\n          });\n        });\n      } else if (((_b = rules.ValidateMinMax) === null || _b === void 0 ? void 0 : _b.when) === \"onblur\") {\n        inputs.forEach(function (input) {\n          input.addEventListener(\"blur\", function (event) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v;\n            var input = event.target;\n            var min = input.min;\n            var max = input.max;\n            var value = input.value;\n            var type = input.type;\n            var inputMinMessage = input.getAttribute(\"data-min-message\");\n            var inputMaxMessage = input.getAttribute(\"data-max-message\");\n            if (min && max) {\n              if (type === \"number\") {\n                if (value < min) {\n                  if ((_a = rules.ValidateMinMax) === null || _a === void 0 ? void 0 : _a.exceedsMin) {\n                    (_b = rules.ValidateMinMax) === null || _b === void 0 ? void 0 : _b.exceedsMin(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMinMessage) {\n                    setErrorText(inputMinMessage);\n                  } else {\n                    if ((_c = rules.ValidateMinMax) === null || _c === void 0 ? void 0 : _c.message) {\n                      setErrorText((_d = rules.ValidateMinMax) === null || _d === void 0 ? void 0 : _d.message.min);\n                    }\n                  }\n                } else if (value > max) {\n                  if ((_e = rules.ValidateMinMax) === null || _e === void 0 ? void 0 : _e.exceedsMax) {\n                    (_f = rules.ValidateMinMax) === null || _f === void 0 ? void 0 : _f.exceedsMax(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMaxMessage) {\n                    setErrorText(inputMaxMessage);\n                  } else {\n                    if ((_g = rules.ValidateMinMax) === null || _g === void 0 ? void 0 : _g.message) {\n                      setErrorText((_h = rules.ValidateMinMax) === null || _h === void 0 ? void 0 : _h.message.max);\n                    }\n                  }\n                } else {\n                  input.style.borderColor = \"\";\n                  if (errorText) {\n                    errorText.innerText = \"\";\n                  }\n                  if ((_j = rules.ValidateMinMax) === null || _j === void 0 ? void 0 : _j.onsuccess) {\n                    (_k = rules.ValidateMinMax) === null || _k === void 0 ? void 0 : _k.onsuccess(input);\n                  }\n                }\n              } else if (type === \"text\") {\n                if (value.length < Number(min)) {\n                  if ((_l = rules.ValidateMinMax) === null || _l === void 0 ? void 0 : _l.exceedsMin) {\n                    (_m = rules.ValidateMinMax) === null || _m === void 0 ? void 0 : _m.exceedsMin(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMinMessage) {\n                    setErrorText(inputMinMessage);\n                  } else {\n                    if ((_o = rules.ValidateMinMax) === null || _o === void 0 ? void 0 : _o.message) {\n                      setErrorText((_p = rules.ValidateMinMax) === null || _p === void 0 ? void 0 : _p.message.min);\n                    }\n                  }\n                } else if (value.length > Number(max)) {\n                  if ((_q = rules.ValidateMinMax) === null || _q === void 0 ? void 0 : _q.exceedsMax) {\n                    (_r = rules.ValidateMinMax) === null || _r === void 0 ? void 0 : _r.exceedsMax(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMaxMessage) {\n                    setErrorText(inputMaxMessage);\n                  } else {\n                    if ((_s = rules.ValidateMinMax) === null || _s === void 0 ? void 0 : _s.message) {\n                      setErrorText((_t = rules.ValidateMinMax) === null || _t === void 0 ? void 0 : _t.message.max);\n                    }\n                  }\n                } else {\n                  if (errorText) {\n                    errorText.innerText = \"\";\n                  }\n                  input.style.borderColor = \"\";\n                  if ((_u = rules.ValidateMinMax) === null || _u === void 0 ? void 0 : _u.onsuccess) {\n                    (_v = rules.ValidateMinMax) === null || _v === void 0 ? void 0 : _v.onsuccess(input);\n                  }\n                }\n              }\n            }\n          });\n        });\n      }\n    };\n    var runValidateEmail = function () {\n      var _a, _b, _c, _d, _e, _f;\n      var emailPattern;\n      var type = (_a = rules.ValidateEmail) === null || _a === void 0 ? void 0 : _a.type;\n      var emailInput = form.querySelector(\"input[name=\\\"\".concat((_b = rules.ValidateEmail) === null || _b === void 0 ? void 0 : _b.emailInput, \"\\\"]\"));\n      var message = (_c = rules.ValidateEmail) === null || _c === void 0 ? void 0 : _c.message;\n      var onsuccess = (_d = rules.ValidateEmail) === null || _d === void 0 ? void 0 : _d.onsuccess;\n      var invalid = (_e = rules.ValidateEmail) === null || _e === void 0 ? void 0 : _e.invalid;\n      var when = (_f = rules.ValidateEmail) === null || _f === void 0 ? void 0 : _f.when;\n      switch (type) {\n        case \"personal\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n          break;\n        case \"business\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n          break;\n        case \"yahoo\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@yahoo\\.com$/;\n          break;\n        case \"gmail\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\n          break;\n        case \"hotmail\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@(hotmail|outlook)\\.com$/;\n          break;\n        case \"aol\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@aol\\.com$/;\n          break;\n        case \"isp\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(comcast|verizon|att)\\.com$/;\n          break;\n        case \"education\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(edu)$/;\n          break;\n        case \"government\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(gov)$/;\n          break;\n        case \"nonprofit\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(org)$/;\n          break;\n        case \"international\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,3}\\.[a-zA-Z]{2}$/;\n          break;\n        case \"domain-specific\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@(support|sales|info)\\.[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n          break;\n        case \"alias\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n          break;\n        default:\n          return false;\n      }\n      if (when === \"onblur\") {\n        emailInput.addEventListener(\"blur\", function () {\n          var email = emailInput.value;\n          if (emailPattern.test(email)) {\n            if (onsuccess) {\n              onsuccess(emailInput);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (emailInput.style.border) {\n              emailInput.style.borderColor = \"\";\n            } else {\n              emailInput.style.border = \"\";\n            }\n          } else {\n            if (emailInput.style.border) {\n              emailInput.style.borderColor = \"red\";\n            } else {\n              emailInput.style.border = \"1px solid red\";\n            }\n            if (invalid) {\n              invalid();\n            }\n            if (errorText) {\n              if (message) {\n                errorText.innerText = message;\n              }\n            }\n          }\n        });\n      } else if (when === \"typing\") {\n        emailInput.addEventListener(\"input\", function () {\n          var email = emailInput.value;\n          if (emailPattern.test(email)) {\n            if (onsuccess) {\n              onsuccess(emailInput);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (emailInput.style.border) {\n              emailInput.style.borderColor = \"\";\n            } else {\n              emailInput.style.border = \"\";\n            }\n          } else {\n            if (emailInput.style.border) {\n              emailInput.style.borderColor = \"red\";\n            } else {\n              emailInput.style.border = \"1px solid red\";\n            }\n            if (invalid) {\n              invalid();\n            }\n            if (errorText) {\n              if (message) {\n                errorText.innerText = message;\n              }\n            }\n          }\n        });\n      }\n    };\n    var runValidatePattern = function () {\n      var _a;\n      var inputElement = form.querySelector(\"input[name=\\\"\".concat((_a = rules.ValidatePattern) === null || _a === void 0 ? void 0 : _a.input, \"\\\"]\"));\n      var options = rules.ValidatePattern;\n      if ((options === null || options === void 0 ? void 0 : options.when) === \"onblur\") {\n        inputElement.addEventListener(\"blur\", function () {\n          var input = inputElement.value;\n          if ((options === null || options === void 0 ? void 0 : options.allowEmpty) && input.length === 0) {\n            return true;\n          }\n          var regex;\n          switch (options === null || options === void 0 ? void 0 : options.type) {\n            case \"regex\":\n              regex = new RegExp(options === null || options === void 0 ? void 0 : options.pattern, options === null || options === void 0 ? void 0 : options.modifiers);\n              break;\n            case \"wildcard\":\n              regex = new RegExp(\"^\" + (options === null || options === void 0 ? void 0 : options.pattern.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\").replace(/\\\\\\*/g, \".*\").replace(/\\\\\\?/g, \".\")) + \"$\", options === null || options === void 0 ? void 0 : options.modifiers);\n              break;\n            default:\n              throw new Error(\"Invalid validation type\");\n          }\n          var isValid = regex.test(input);\n          if (isValid) {\n            if (options === null || options === void 0 ? void 0 : options.onsuccess) {\n              options === null || options === void 0 ? void 0 : options.onsuccess(inputElement);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (inputElement.style.border) {\n              inputElement.style.borderColor = \"\";\n            } else {\n              inputElement.style.border = \"\";\n            }\n          } else {\n            if (inputElement.style.border) {\n              inputElement.style.borderColor = \"red\";\n            } else {\n              inputElement.style.border = \"1px solid red\";\n            }\n            if (options === null || options === void 0 ? void 0 : options.invalid) {\n              options === null || options === void 0 ? void 0 : options.invalid();\n            }\n            if (errorText) {\n              if (options === null || options === void 0 ? void 0 : options.errorMessage) {\n                errorText.innerText = options === null || options === void 0 ? void 0 : options.errorMessage;\n              }\n            }\n          }\n        });\n      } else if ((options === null || options === void 0 ? void 0 : options.when) === \"typing\") {\n        inputElement.addEventListener(\"input\", function () {\n          var input = inputElement.value;\n          if ((options === null || options === void 0 ? void 0 : options.allowEmpty) && input.length === 0) {\n            return true;\n          }\n          var regex;\n          switch (options === null || options === void 0 ? void 0 : options.type) {\n            case \"regex\":\n              regex = new RegExp(options === null || options === void 0 ? void 0 : options.pattern, options === null || options === void 0 ? void 0 : options.modifiers);\n              break;\n            case \"wildcard\":\n              regex = new RegExp(\"^\" + (options === null || options === void 0 ? void 0 : options.pattern.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\").replace(/\\\\\\*/g, \".*\").replace(/\\\\\\?/g, \".\")) + \"$\", options === null || options === void 0 ? void 0 : options.modifiers);\n              break;\n            default:\n              throw new Error(\"Invalid validation type\");\n          }\n          var isValid = regex.test(input);\n          console.log(isValid, input, options.pattern);\n          if (isValid) {\n            if (options === null || options === void 0 ? void 0 : options.onsuccess) {\n              options === null || options === void 0 ? void 0 : options.onsuccess(inputElement);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (inputElement.style.border) {\n              inputElement.style.borderColor = \"\";\n            } else {\n              inputElement.style.border = \"\";\n            }\n          } else {\n            if (inputElement.style.border) {\n              inputElement.style.borderColor = \"red\";\n            } else {\n              inputElement.style.border = \"1px solid red\";\n            }\n            if (options === null || options === void 0 ? void 0 : options.invalid) {\n              options === null || options === void 0 ? void 0 : options.invalid();\n            }\n            if (errorText) {\n              if (options === null || options === void 0 ? void 0 : options.errorMessage) {\n                errorText.innerText = options === null || options === void 0 ? void 0 : options.errorMessage;\n              }\n            }\n          }\n        });\n      }\n    };\n    var runValidatePhone = function () {\n      var _a, _b, _c, _d, _e, _f;\n      var phoneInput = form.querySelector(\"input[name=\\\"\".concat((_a = rules.ValidatePhone) === null || _a === void 0 ? void 0 : _a.phoneInput, \"\\\"]\"));\n      var countryCode = (_b = rules.ValidatePhone) === null || _b === void 0 ? void 0 : _b.countryCode;\n      var when = (_c = rules.ValidatePhone) === null || _c === void 0 ? void 0 : _c.when;\n      var onsuccess = (_d = rules.ValidatePhone) === null || _d === void 0 ? void 0 : _d.onsuccess;\n      var invalid = (_e = rules.ValidatePhone) === null || _e === void 0 ? void 0 : _e.invalid;\n      var message = (_f = rules.ValidatePhone) === null || _f === void 0 ? void 0 : _f.message;\n      if (when === \"onblur\") {\n        phoneInput.addEventListener(\"blur\", function () {\n          var phoneNumber = phoneInput.value;\n          var isValid = false;\n          if (countryCode && countryCodeRegexMap[countryCode]) {\n            isValid = countryCodeRegexMap[countryCode].test(phoneNumber);\n          } else {\n            for (var _i = 0, _a = Object.values(countryCodeRegexMap); _i < _a.length; _i++) {\n              var regex = _a[_i];\n              if (regex.test(phoneNumber)) {\n                isValid = true;\n                break;\n              }\n            }\n          }\n          if (isValid) {\n            if (onsuccess) {\n              onsuccess(phoneInput);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (phoneInput.style.border) {\n              phoneInput.style.borderColor = \"\";\n            } else {\n              phoneInput.style.border = \"\";\n            }\n          } else {\n            if (phoneInput.style.border) {\n              phoneInput.style.borderColor = \"red\";\n            } else {\n              phoneInput.style.border = \"1px solid red\";\n            }\n            if (invalid) {\n              invalid();\n            }\n            if (errorText) {\n              if (message) {\n                errorText.innerText = message;\n              }\n            }\n          }\n        });\n      } else if (when === \"typing\") {\n        phoneInput.addEventListener(\"input\", function () {\n          var phoneNumber = phoneInput.value;\n          var isValid = false;\n          if (countryCode && countryCodeRegexMap[countryCode]) {\n            isValid = countryCodeRegexMap[countryCode].test(phoneNumber);\n          } else {\n            for (var _i = 0, _a = Object.values(countryCodeRegexMap); _i < _a.length; _i++) {\n              var regex = _a[_i];\n              if (regex.test(phoneNumber)) {\n                isValid = true;\n                break;\n              }\n            }\n          }\n          if (isValid) {\n            if (onsuccess) {\n              onsuccess(phoneInput);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (phoneInput.style.border) {\n              phoneInput.style.borderColor = \"\";\n            } else {\n              phoneInput.style.border = \"\";\n            }\n          } else {\n            if (phoneInput.style.border) {\n              phoneInput.style.borderColor = \"red\";\n            } else {\n              phoneInput.style.border = \"1px solid red\";\n            }\n            if (invalid) {\n              invalid();\n            }\n            if (errorText) {\n              if (message) {\n                errorText.innerText = message;\n              }\n            }\n          }\n        });\n      }\n    };\n    if (rules) {\n      if (rules.validateRequired) {\n        runValidateRequired();\n      }\n      if (rules.ValidateMinMax) {\n        runValidateMinMax();\n      }\n      if (rules.ValidateEmail) {\n        runValidateEmail();\n      }\n      if (rules.ValidatePattern) {\n        runValidatePattern();\n      }\n      if (rules.ValidatePhone) {\n        runValidatePhone();\n      }\n    }\n  };\n  ValidateForm.prototype.render = function () {\n    return react_1.default.createElement(\"div\", {\n      id: \"_validation_wrapper\"\n    }, this.props.children);\n  };\n  return ValidateForm;\n}(react_1.default.Component);\nexports.default = ValidateForm;","map":{"version":3,"names":["react_1","__importDefault","require","countryCodeRegexMap","US","CA","MX","GB","FR","DE","JP","AU","NZ","IN","CN","HK","SG","TW","KR","TH","PH","VN","MY","BE","NL","IT","ES","PT","AT","CH","SE","NO","DK","FI","BR","AR","CO","PE","CL","VE","CR","PA","DO","GT","EC","UY","PY","BO","HN","NI","SV","PR","JM","BB","KY","VG","TT","DM","GD","GH","KE","NG","UG","RW","CM","SN","TZ","CI","MG","ZM","ZW","MW","LS","SZ","KM","DJ","RE","YT","WF","NU","TK","FM","MH","SA","RU","ValidateForm","_super","__extends","prototype","componentDidMount","init","componentDidUpdate","prevProps","props","rules","errorElement","allowedKeys","wrapper","document","getElementById","form","children","submit_button","querySelector","errorText","errorMessage","String","addEventListener","innerText","submit","setErrorText","message","runValidateRequired","event","input","target","style","borderColor","preventDefault","requiredInputs","_a","validateRequired","applyOnly","_b","forEach","inputName","push","concat","querySelectorAll","missingInputs","value","length","index","notvalidated","focus","_c","action","border","_d","_e","_f","_g","onsuccess","runValidateMinMax","inputs","ValidateMinMax","when","min","max","type","inputMinMessage","getAttribute","inputMaxMessage","exceedsMin","exceedsMax","_h","_j","_k","Number","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","runValidateEmail","emailPattern","ValidateEmail","emailInput","invalid","email","test","runValidatePattern","inputElement","ValidatePattern","options","allowEmpty","regex","RegExp","pattern","modifiers","replace","Error","isValid","console","log","runValidatePhone","phoneInput","ValidatePhone","countryCode","phoneNumber","_i","Object","values","render","default","createElement","id","Component","exports"],"sources":["/Users/arshadyaseen/Desktop/ReactFromValidator/form-validation-react/src/index.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface ValidateRequiredObj {\n  applyOnly: Array<string>;\n  action: \"both\" | \"input_red_border\" | \"show_error_message\";\n  notvalidated: Function;\n  onsuccess: Function;\n  message: string;\n}\ninterface ValidateMinMaxObj {\n  when: \"onblur\" | \"typing\";\n  message: {\n    min: string;\n    max: string;\n  };\n  onsuccess: Function;\n  exceedsMax: Function;\n  exceedsMin: Function;\n}\ninterface ValidatePatternObj {\n  when: \"onblur\" | \"typing\";\n  input: string;\n  pattern: string;\n  type?: \"regex\" | \"wildcard\";\n  modifiers?: string;\n  errorMessage?: string;\n  allowEmpty?: boolean;\n  onsuccess: Function;\n  invalid: Function;\n}\ninterface ValidatePhoneObj {\n  when: \"onblur\" | \"typing\";\n  countryCode: \"US\" | \"CA\" | \"MX\" | \"GB\" | \"FR\" | \"DE\" | \"JP\" | \"AU\" | \"NZ\" | \"IN\" | \"CN\" | \"HK\" | \"SG\" | \"TW\" | \"KR\" | \"TH\" | \"PH\" | \"VN\" | \"MY\" | \"BE\" | \"NL\" | \"IT\" | \"ES\" | \"PT\" | \"AT\" | \"CH\" | \"SE\" | \"NO\" | \"DK\" | \"FI\" | \"BR\" | \"AR\" | \"CO\" | \"PE\" | \"CL\" | \"VE\" | \"CR\" | \"PA\" | \"DO\" | \"GT\" | \"EC\" | \"UY\" | \"PY\" | \"BO\" | \"HN\" | \"NI\" | \"SV\" | \"PR\" | \"JM\" | \"BB\" | \"KY\" | \"VG\" | \"TT\" | \"DM\" | \"GD\" | \"GH\" | \"KE\" | \"NG\" | \"UG\" | \"RW\" | \"CM\" | \"SN\" | \"TZ\" | \"CI\" | \"MG\" | \"ZM\" | \"ZW\" | \"MW\" | \"LS\" | \"SZ\" | \"KM\" | \"DJ\" | \"RE\" | \"YT\" | \"WF\" | \"NU\" | \"TK\" | \"FM\" | \"MH\" | \"SA\" | \"RU\"\n  phoneInput: string;\n  onsuccess: Function;\n  invalid: Function;\n  message: string;\n  isLandlineNumber: Function;\n  isMobileNumber: Function\n}\n\ninterface ValidateEmailObj {\n  when: \"onblur\" | \"typing\";\n  message: string;\n  onsuccess: Function;\n  invalid: Function;\n  emailInput: string;\n  type:\n    | \"personal\"\n    | \"business\"\n    | \"yahoo\"\n    | \"gmail\"\n    | \"hotmail\"\n    | \"aol\"\n    | \"isp\"\n    | \"education\"\n    | \"government\"\n    | \"nonprofit\"\n    | \"international\"\n    | \"domain-specific\"\n    | \"alias\";\n}\n\ninterface Rules {\n  validateRequired?: ValidateRequiredObj;\n  ValidateMinMax?: ValidateMinMaxObj;\n  ValidateEmail?: ValidateEmailObj;\n  ValidatePattern?: ValidatePatternObj;\n  ValidatePhone?: ValidatePhoneObj;\n}\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  rules: Rules;\n  errorElement: string;\n}\n\ninterface ValidateForm {\n  props: Props;\n}\n\ninterface CountryCodeRegexMap {\n  [countryCode: string]: RegExp;\n}\n\nconst countryCodeRegexMap: CountryCodeRegexMap = {\n  US: /^(\\+?1)?[2-9]\\d{9}$/,\n  CA: /^(\\+?1)?[2-9]\\d{9}$/,\n  MX: /^(\\+?52)?(1)?\\d{10}$/,\n  GB: /^(\\+?44|0)7\\d{9}$/,\n  FR: /^(\\+?33|0)[67]\\d{8}$/,\n  DE: /^(\\+49|0)[1-9]\\d{10}$/,\n  JP: /^(\\+?81|0)\\d{1,4}[ \\-]?\\d{1,4}[ \\-]?\\d{4}$/,\n  AU: /^(\\+?61|0)[45789]\\d{8}$/,\n  NZ: /^(\\+?64|0)[28]\\d{7,9}$/,\n  IN: /^(\\+?91|0)?[6789]\\d{9}$/,\n  CN: /^(\\+?0?86\\-?)?1[3456789]\\d{9}$/,\n  HK: /^(\\+?852\\-?)?[569]\\d{3}\\-?\\d{4}$/,\n  SG: /^(\\+65)?[89]\\d{7}$/,\n  TW: /^(\\+?886\\-?|0)?9\\d{8}$/,\n  KR: /^(\\+?82|0)?1[0-9]{1,2}-?[0-9]{3,4}-?[0-9]{4}$/,\n  TH: /^(\\+66|66|0)\\d{8}$/,\n  PH: /^(\\+?63|0)?[89]\\d{9}$/,\n  VN: /^(\\+?84|0)?[1-9]\\d{8}$/,\n  MY: /^(\\+?6?01){1}(([145]{1}(-|\\s)?\\d{7,8})|([236789]{1}(\\s|-)?\\d{7}))$/,\n  BE: /^(\\+?32|0)4?\\d{8}$/,\n  NL: /^(\\+?31|0)6?\\d{8}$/,\n  IT: /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\n  ES: /^(\\+?34)?[-. ]?6\\d{8}$/,\n  PT: /^(\\+351)?9[1236]\\d{7}$/,\n  AT: /^(\\+43|0)\\d{1,4}\\d{3,12}$/,\n  CH: /^(\\+41|0)([1-9])\\d{1,12}$/,\n  SE: /^(\\+?46|0)7\\d{8}$/,\n  NO: /^(\\+?47)?[49]\\d{7}$/,\n  DK: /^(\\+?45)?(\\d{8})$/,\n  FI: /^(\\+?358|0)\\s?(4(0|1|2|4|5)|50|4(6|7)|[5-7]|9\\d)\\s?\\d{6,7}$/,\n  BR: /^(\\+?55|0)?([1-9]{2})?([6-9]{1})(\\d{8})$/,\n  AR: /^(\\+?54|0)?([1-9])?([1-9])(\\d{7,8})$/,\n  CO: /^(\\+?57|0)?([1-8]{1})?([2-4]{1})(\\d{7})$/,\n  PE: /^(\\+?51|0)?([1-9]{2})?([1-9]{1})(\\d{7})$/,\n  CL: /^(\\+?56|0)?([2-9]{1})?([2-9])(\\d{6,7})$/,\n  VE: /^(\\+?58|0)?([4]{1})(1|2|4|6)(\\d{7})$/,\n  CR: /^(\\+?506)?([2-8]{1})(\\d{7})$/,\n  PA: /^(\\+?507)?([2-8]{1})(\\d{7})$/,\n  DO: /^(\\+?1|0)?([8]{1})(0|1)(\\d{7})$/,\n  GT: /^(\\+?502)?([23]{1})(\\d{7})$/,\n  EC: /^(\\+?593|0)([679]{1})(\\d{7})$/,\n  UY: /^(\\+?598|0)([4]{1}[2-9]{1}|[5-9]{1})(\\d{6})$/,\n  PY: /^(\\+?595|0)([9]{1})([1-9]{1})(\\d{6})$/,\n  BO: /^(\\+?591)?([267]{1})(\\d{7})$/,\n  HN: /^(\\+?504)?([239]{1})(\\d{7})$/,\n  NI: /^(\\+?505)?([5689]{1})(\\d{7})$/,\n  SV: /^(\\+?503)?([67]{1})(\\d{7})$/,\n  PR: /^(\\+?1)?([0]{1}[78]{1}|[2367]{1})(\\d{7})$/,\n  JM: /^(\\+?1)?([8]{1}[79]{1}|[45]{1}[67]{1})(\\d{7})$/,\n  BB: /^(\\+?1)?([246]{1})(\\d{7})$/,\n  KY: /^(\\+?1)?([345]{1}([01]{1}|[69]{1})|[24]{1}([26]{1}|[46]{1})|[78]{1}([4]{1}|[5]{1}|[7]{1}|[9]{1}))(\\d{6})$/,\n  VG: /^(\\+?1)?([284]{1})(\\d{7})$/,\n  TT: /^(\\+?1)?([868]{1})(\\d{7})$/,\n  DM: /^(\\+?1)?([767]{1})(\\d{7})$/,\n  GD: /^(\\+?1)?([473]{1})(\\d{7})$/,\n  GH: /^(\\+?233|0)?([23]0|[57][0567]|6[679]|8[124567])(\\d{7})$/,\n  KE: /^(\\+?254|0)?([17](0|1|[3-9])[0-9]{6}|([2-9]|[4-6][0-9])[0-9]{6,7})$/,\n  NG: /^(\\+?234|0)?[789]\\d{9}$/,\n  UG: /^(\\+?256|0)?([39]0|[47][057]|[568][056]|[7-9][089])(\\d{7})$/,\n  RW: /^(\\+?250|0)?[7]\\d{8}$/,\n  CM: /^(\\+?237|0)?(6[57]|2[2368]|3[89]|4[6-8]|[78]0|\\d{2})(\\d{6,7})$/,\n  SN: /^(\\+?221|0)?[76][05](\\d{7}|\\d{8})$/,\n  TZ: /^(\\+?255|0)?[67]\\d{8}$/,\n  CI: /^(\\+?225|0)?[017]\\d{7}$/,\n  MG: /^(\\+?261|0)?[2368]\\d{7}$/,\n  ZM: /^(\\+?26[01]|0)?[567]\\d{8}$/,\n  ZW: /^(\\+?263|0)?[17]\\d{8}$/,\n  MW: /^(\\+?265|0)?[11768]\\d{7}$/,\n  LS: /^(\\+?266|0)?[5-8]\\d{7}$/,\n  SZ: /^(\\+?268|0)?[7]\\d{7}$/,\n  KM: /^(\\+?269|0)?[269]\\d{7}$/,\n  DJ: /^(\\+?253|0)?[77-9](\\d{6})$/,\n  RE: /^(\\+?262|0)?[269]\\d{8}$/,\n  YT: /^(\\+?262|0)?[639]\\d{8}$/,\n  WF: /^(\\+?681|0)?\\d{6}$/,\n  NU: /^(\\+?683|0)?\\d{4}$/,\n  TK: /^(\\+?690|0)?\\d{4}$/,\n  FM: /^(\\+?691|0)?[1-9]\\d{3}$/,\n  MH: /^(\\+?692|0)?\\d{7}$/,\n  SA: /^(\\+?966|0)?5[0-9]{8}$/,\n  RU: /^(\\+?7|8)?9\\d{9}$/,\n};\n\nclass ValidateForm extends React.Component<Props> {\n  componentDidMount() {\n    this.init();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.rules !== prevProps.rules) {\n      this.init();\n    }\n  }\n\n  init() {\n    let { rules } = this.props;\n    let { errorElement } = this.props;\n    let allowedKeys: Array<keyof Rules> = [\n      \"validateRequired\",\n      \"ValidateMinMax\",\n      \"ValidateEmail\",\n      \"ValidatePattern\",\n      \"ValidatePhone\",\n    ];\n\n    let wrapper = document.getElementById(\"_validation_wrapper\");\n    let form = wrapper?.children[0] as HTMLFormElement;\n    let submit_button =\n      (form.querySelector('button[type=\"submit\"]') as HTMLFormElement) ||\n      (form.querySelector('input[type=\"submit\"]') as HTMLFormElement);\n    let errorText = document.querySelector(errorElement) as HTMLElement;\n    let errorMessage = String;\n\n    submit_button.addEventListener(\"submit\", () => {\n      if (errorText?.innerText === \"\") {\n        form.submit();\n      }\n    });\n\n    const setErrorText = (message: string) => {\n      if (errorText) {\n        errorText.innerText = message;\n      }\n    };\n\n    const runValidateRequired = () => {\n      // Check If All Required Feilds Filled\n\n      form.addEventListener(\"input\", (event) => {\n        const input = event.target as HTMLInputElement;\n\n        input.style.borderColor = \"\";\n      });\n\n      const submit_button =\n        form?.querySelector<HTMLInputElement>('button[type=\"submit\"]') ||\n        form?.querySelector<HTMLInputElement>('input[type=\"submit\"]');\n\n      submit_button?.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n\n        let requiredInputs: HTMLInputElement[] = [];\n\n        if (rules.validateRequired?.applyOnly) {\n          rules.validateRequired?.applyOnly.forEach((inputName: String) => {\n            requiredInputs.push(\n              form?.querySelector<HTMLInputElement>(\n                `[name=\"${inputName}\"]`\n              ) as HTMLInputElement\n            );\n          });\n        } else {\n          form\n            ?.querySelectorAll<HTMLInputElement>(\"input[required]\")\n            .forEach((input) => {\n              requiredInputs.push(input);\n            });\n        }\n\n        const missingInputs: HTMLInputElement[] = [];\n\n        requiredInputs?.forEach((input) => {\n          if (!input.value) {\n            missingInputs.push(input);\n          }\n        });\n\n        if (missingInputs.length > 0) {\n          missingInputs.forEach((input, index) => {\n            if (rules.validateRequired?.notvalidated) {\n              rules.validateRequired?.notvalidated(missingInputs);\n            }\n            if (index === 0) {\n              input.focus();\n            }\n            if (rules.validateRequired?.action === \"input_red_border\") {\n              if (input.style.border) {\n                input.style.borderColor = \"red\";\n              } else {\n                input.style.border = \"1px solid red\";\n              }\n            } else if (\n              rules.validateRequired?.action === \"show_error_message\"\n            ) {\n              if (rules.validateRequired.message) {\n                setErrorText(rules.validateRequired.message);\n              }\n            } else if (rules.validateRequired?.action === \"both\") {\n              if (rules.validateRequired?.message) {\n                setErrorText(rules.validateRequired?.message);\n              }\n              if (input.style.border) {\n                input.style.borderColor = \"red\";\n              } else {\n                input.style.border = \"1px solid red\";\n              }\n            }\n          });\n        } else {\n          if (errorText) {\n            errorText.innerText = \"\";\n          }\n          if (rules.validateRequired?.onsuccess) {\n            rules.validateRequired?.onsuccess();\n          } else {\n            if (errorText.innerText === \"\") {\n              form.submit();\n            }\n          }\n        }\n      });\n    };\n\n    const runValidateMinMax = () => {\n      const inputs = form.querySelectorAll(\"input[min][max]\");\n\n      if (rules.ValidateMinMax?.when === \"typing\") {\n        inputs.forEach((input) => {\n          input.addEventListener(\"input\", (event) => {\n            const input = event.target as HTMLInputElement;\n            const min = input.min;\n            const max = input.max;\n            const value = input.value;\n            const type = input.type;\n            const inputMinMessage = input.getAttribute(\"data-min-message\");\n            const inputMaxMessage = input.getAttribute(\"data-max-message\");\n\n            if (min && max) {\n              if (type === \"number\") {\n                if (value < min) {\n                  if (rules.ValidateMinMax?.exceedsMin) {\n                    rules.ValidateMinMax?.exceedsMin(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMinMessage) {\n                    setErrorText(inputMinMessage);\n                  } else {\n                    if (rules.ValidateMinMax?.message) {\n                      setErrorText(rules.ValidateMinMax?.message.min);\n                    }\n                  }\n                } else if (value > max) {\n                  if (rules.ValidateMinMax?.exceedsMax) {\n                    rules.ValidateMinMax?.exceedsMax(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMaxMessage) {\n                    setErrorText(inputMaxMessage);\n                  } else {\n                    if (rules.ValidateMinMax?.message) {\n                      setErrorText(rules.ValidateMinMax?.message.max);\n                    }\n                  }\n                } else {\n                  input.style.borderColor = \"\";\n                  if (errorText) {\n                    errorText.innerText = \"\";\n                  }\n                  if (rules.ValidateMinMax?.onsuccess) {\n                    rules.ValidateMinMax?.onsuccess(input);\n                  }\n                }\n              } else if (type === \"text\") {\n                if (value.length < Number(min)) {\n                  if (rules.ValidateMinMax?.exceedsMin) {\n                    rules.ValidateMinMax?.exceedsMin(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMinMessage) {\n                    setErrorText(inputMinMessage);\n                  } else {\n                    if (rules.ValidateMinMax?.message) {\n                      setErrorText(rules.ValidateMinMax?.message.min);\n                    }\n                  }\n                } else if (value.length > Number(max)) {\n                  if (rules.ValidateMinMax?.exceedsMax) {\n                    rules.ValidateMinMax?.exceedsMax(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMaxMessage) {\n                    setErrorText(inputMaxMessage);\n                  } else {\n                    if (rules.ValidateMinMax?.message) {\n                      setErrorText(rules.ValidateMinMax?.message.max);\n                    }\n                  }\n                } else {\n                  input.style.borderColor = \"\";\n                  if (errorText) {\n                    errorText.innerText = \"\";\n                  }\n\n                  if (rules.ValidateMinMax?.onsuccess) {\n                    rules.ValidateMinMax?.onsuccess(input);\n                  }\n                }\n              }\n            }\n          });\n        });\n      } else if (rules.ValidateMinMax?.when === \"onblur\") {\n        inputs.forEach((input) => {\n          input.addEventListener(\"blur\", (event) => {\n            const input = event.target as HTMLInputElement;\n            const min = input.min;\n            const max = input.max;\n            const value = input.value;\n            const type = input.type;\n            const inputMinMessage = input.getAttribute(\"data-min-message\");\n            const inputMaxMessage = input.getAttribute(\"data-max-message\");\n\n            if (min && max) {\n              if (type === \"number\") {\n                if (value < min) {\n                  if (rules.ValidateMinMax?.exceedsMin) {\n                    rules.ValidateMinMax?.exceedsMin(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMinMessage) {\n                    setErrorText(inputMinMessage);\n                  } else {\n                    if (rules.ValidateMinMax?.message) {\n                      setErrorText(rules.ValidateMinMax?.message.min);\n                    }\n                  }\n                } else if (value > max) {\n                  if (rules.ValidateMinMax?.exceedsMax) {\n                    rules.ValidateMinMax?.exceedsMax(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMaxMessage) {\n                    setErrorText(inputMaxMessage);\n                  } else {\n                    if (rules.ValidateMinMax?.message) {\n                      setErrorText(rules.ValidateMinMax?.message.max);\n                    }\n                  }\n                } else {\n                  input.style.borderColor = \"\";\n                  if (errorText) {\n                    errorText.innerText = \"\";\n                  }\n                  if (rules.ValidateMinMax?.onsuccess) {\n                    rules.ValidateMinMax?.onsuccess(input);\n                  }\n                }\n              } else if (type === \"text\") {\n                if (value.length < Number(min)) {\n                  if (rules.ValidateMinMax?.exceedsMin) {\n                    rules.ValidateMinMax?.exceedsMin(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMinMessage) {\n                    setErrorText(inputMinMessage);\n                  } else {\n                    if (rules.ValidateMinMax?.message) {\n                      setErrorText(rules.ValidateMinMax?.message.min);\n                    }\n                  }\n                } else if (value.length > Number(max)) {\n                  if (rules.ValidateMinMax?.exceedsMax) {\n                    rules.ValidateMinMax?.exceedsMax(input);\n                  }\n                  if (input.style.border) {\n                    input.style.borderColor = \"red\";\n                  } else {\n                    input.style.border = \"1px solid red\";\n                  }\n                  if (inputMaxMessage) {\n                    setErrorText(inputMaxMessage);\n                  } else {\n                    if (rules.ValidateMinMax?.message) {\n                      setErrorText(rules.ValidateMinMax?.message.max);\n                    }\n                  }\n                } else {\n                  if (errorText) {\n                    errorText.innerText = \"\";\n                  }\n                  input.style.borderColor = \"\";\n                  if (rules.ValidateMinMax?.onsuccess) {\n                    rules.ValidateMinMax?.onsuccess(input);\n                  }\n                }\n              }\n            }\n          });\n        });\n      }\n    };\n\n    const runValidateEmail = () => {\n      let emailPattern: RegExp;\n      let type = rules.ValidateEmail?.type;\n      let emailInput = form.querySelector(\n        `input[name=\"${rules.ValidateEmail?.emailInput}\"]`\n      ) as HTMLInputElement;\n      let message = rules.ValidateEmail?.message;\n      let onsuccess = rules.ValidateEmail?.onsuccess;\n      let invalid = rules.ValidateEmail?.invalid;\n      let when = rules.ValidateEmail?.when;\n\n      switch (type) {\n        case \"personal\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n          break;\n        case \"business\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n          break;\n        case \"yahoo\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@yahoo\\.com$/;\n          break;\n        case \"gmail\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\n          break;\n        case \"hotmail\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@(hotmail|outlook)\\.com$/;\n          break;\n        case \"aol\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@aol\\.com$/;\n          break;\n        case \"isp\":\n          emailPattern =\n            /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(comcast|verizon|att)\\.com$/;\n          break;\n        case \"education\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(edu)$/;\n          break;\n        case \"government\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(gov)$/;\n          break;\n        case \"nonprofit\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.(org)$/;\n          break;\n        case \"international\":\n          emailPattern =\n            /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,3}\\.[a-zA-Z]{2}$/;\n          break;\n        case \"domain-specific\":\n          emailPattern =\n            /^[a-zA-Z0-9._%+-]+@(support|sales|info)\\.[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n          break;\n        case \"alias\":\n          emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n          break;\n        default:\n          return false;\n      }\n\n      if (when === \"onblur\") {\n        emailInput.addEventListener(\"blur\", () => {\n          let email = emailInput.value;\n\n          if (emailPattern.test(email)) {\n            if (onsuccess) {\n              onsuccess(emailInput);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (emailInput.style.border) {\n              emailInput.style.borderColor = \"\";\n            } else {\n              emailInput.style.border = \"\";\n            }\n          } else {\n            if (emailInput.style.border) {\n              emailInput.style.borderColor = \"red\";\n            } else {\n              emailInput.style.border = \"1px solid red\";\n            }\n            if (invalid) {\n              invalid();\n            }\n            if (errorText) {\n              if (message) {\n                errorText.innerText = message;\n              }\n            }\n          }\n        });\n      } else if (when === \"typing\") {\n        emailInput.addEventListener(\"input\", () => {\n          let email = emailInput.value;\n          if (emailPattern.test(email)) {\n            if (onsuccess) {\n              onsuccess(emailInput);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (emailInput.style.border) {\n              emailInput.style.borderColor = \"\";\n            } else {\n              emailInput.style.border = \"\";\n            }\n          } else {\n            if (emailInput.style.border) {\n              emailInput.style.borderColor = \"red\";\n            } else {\n              emailInput.style.border = \"1px solid red\";\n            }\n            if (invalid) {\n              invalid();\n            }\n            if (errorText) {\n              if (message) {\n                errorText.innerText = message;\n              }\n            }\n          }\n        });\n      }\n    };\n\n    const runValidatePattern = () => {\n      let inputElement = form.querySelector(\n        `input[name=\"${rules.ValidatePattern?.input}\"]`\n      ) as HTMLInputElement;\n      let options = rules.ValidatePattern;\n\n      if (options?.when === \"onblur\") {\n        inputElement.addEventListener(\"blur\", () => {\n          let input = inputElement.value;\n\n          if (options?.allowEmpty && input.length === 0) {\n            return true;\n          }\n\n          let regex: RegExp;\n          switch (options?.type) {\n            case \"regex\":\n              regex = new RegExp(options?.pattern, options?.modifiers);\n              break;\n            case \"wildcard\":\n              regex = new RegExp(\n                \"^\" +\n                  options?.pattern\n                    .replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\")\n                    .replace(/\\\\\\*/g, \".*\")\n                    .replace(/\\\\\\?/g, \".\") +\n                  \"$\",\n                options?.modifiers\n              );\n              break;\n            default:\n              throw new Error(\"Invalid validation type\");\n          }\n\n          const isValid = regex.test(input);\n\n          if (isValid) {\n            if (options?.onsuccess) {\n              options?.onsuccess(inputElement);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (inputElement.style.border) {\n              inputElement.style.borderColor = \"\";\n            } else {\n              inputElement.style.border = \"\";\n            }\n          } else {\n            if (inputElement.style.border) {\n              inputElement.style.borderColor = \"red\";\n            } else {\n              inputElement.style.border = \"1px solid red\";\n            }\n            if (options?.invalid) {\n              options?.invalid();\n            }\n            if (errorText) {\n              if (options?.errorMessage) {\n                errorText.innerText = options?.errorMessage;\n              }\n            }\n          }\n        });\n      } else if (options?.when === \"typing\") {\n        inputElement.addEventListener(\"input\", () => {\n          let input = inputElement.value;\n\n          if (options?.allowEmpty && input.length === 0) {\n            return true;\n          }\n\n          let regex: RegExp;\n\n          switch (options?.type) {\n            case \"regex\":\n              regex = new RegExp(options?.pattern, options?.modifiers);\n              break;\n            case \"wildcard\":\n              regex = new RegExp(\n                \"^\" +\n                  options?.pattern\n                    .replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\")\n                    .replace(/\\\\\\*/g, \".*\")\n                    .replace(/\\\\\\?/g, \".\") +\n                  \"$\",\n                options?.modifiers\n              );\n              break;\n            default:\n              throw new Error(\"Invalid validation type\");\n          }\n\n          const isValid = regex.test(input);\n\n          console.log(isValid, input, options.pattern);\n\n          if (isValid) {\n            if (options?.onsuccess) {\n              options?.onsuccess(inputElement);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (inputElement.style.border) {\n              inputElement.style.borderColor = \"\";\n            } else {\n              inputElement.style.border = \"\";\n            }\n          } else {\n            if (inputElement.style.border) {\n              inputElement.style.borderColor = \"red\";\n            } else {\n              inputElement.style.border = \"1px solid red\";\n            }\n            if (options?.invalid) {\n              options?.invalid();\n            }\n            if (errorText) {\n              if (options?.errorMessage) {\n                errorText.innerText = options?.errorMessage;\n              }\n            }\n          }\n        });\n      }\n    };\n\n    const runValidatePhone = () => {\n      let phoneInput = form.querySelector(\n        `input[name=\"${rules.ValidatePhone?.phoneInput}\"]`\n      ) as HTMLInputElement;\n      let countryCode = rules.ValidatePhone?.countryCode;\n      let when = rules.ValidatePhone?.when;\n      let onsuccess = rules.ValidatePhone?.onsuccess;\n      let invalid = rules.ValidatePhone?.invalid;\n      let message = rules.ValidatePhone?.message;\n\n      const mobileRegex = /^(\\+?254|0)?([17](0|1|[3-9])[0-9]{6}|([2-9]|[4-6][0-9])[0-9]{6,7})$/;\n      const landlineRegex = /^(\\+?254|0)?([2-69][0-9]{6,7})$/;\n\n      if (when === \"onblur\") {\n        phoneInput.addEventListener(\"blur\", () => {\n          let phoneNumber = phoneInput.value;\n\n          let isValid = false;\n\n          if (countryCode && countryCodeRegexMap[countryCode]) {\n            isValid = countryCodeRegexMap[countryCode].test(phoneNumber);\n          } else {\n            for (const regex of Object.values(countryCodeRegexMap)) {\n              if (regex.test(phoneNumber)) {\n                isValid = true;\n                break;\n              }\n            }\n          }\n\n          if (isValid) {\n            if (onsuccess) {\n              onsuccess(phoneInput);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (phoneInput.style.border) {\n              phoneInput.style.borderColor = \"\";\n            } else {\n              phoneInput.style.border = \"\";\n            }\n          }else{\n            if (phoneInput.style.border) {\n              phoneInput.style.borderColor = \"red\";\n            } else {\n              phoneInput.style.border = \"1px solid red\";\n            }\n            if (invalid) {\n              invalid();\n            }\n            if (errorText) {\n              if (message) {\n                errorText.innerText = message;\n              }\n            }\n          }\n\n          if(rules.ValidatePhone?.isLandlineNumber){\n            rules.va\n          }\n          if(rules.ValidatePhone?.isMobileNumber){\n            return mobileRegex.test(phoneNumber)\n          }\n\n        });\n      } else if (when === \"typing\") {\n        phoneInput.addEventListener(\"input\", () => {\n          let phoneNumber = phoneInput.value;\n\n          let isValid = false;\n\n          if (countryCode && countryCodeRegexMap[countryCode]) {\n            isValid = countryCodeRegexMap[countryCode].test(phoneNumber);\n          } else {\n            for (const regex of Object.values(countryCodeRegexMap)) {\n              if (regex.test(phoneNumber)) {\n                isValid = true;\n                break;\n              }\n            }\n          }\n\n          if (isValid) {\n            if (onsuccess) {\n              onsuccess(phoneInput);\n            }\n            if (errorText) {\n              errorText.innerText = \"\";\n            }\n            if (phoneInput.style.border) {\n              phoneInput.style.borderColor = \"\";\n            } else {\n              phoneInput.style.border = \"\";\n            }\n          }else{\n            if (phoneInput.style.border) {\n              phoneInput.style.borderColor = \"red\";\n            } else {\n              phoneInput.style.border = \"1px solid red\";\n            }\n            if (invalid) {\n              invalid();\n            }\n            if (errorText) {\n              if (message) {\n                errorText.innerText = message;\n              }\n            }\n          }\n\n        });\n      }\n    };\n\n    if (rules) {\n      if (rules.validateRequired) {\n        runValidateRequired();\n      }\n      if (rules.ValidateMinMax) {\n        runValidateMinMax();\n      }\n      if (rules.ValidateEmail) {\n        runValidateEmail();\n      }\n      if (rules.ValidatePattern) {\n        runValidatePattern();\n      }\n      if (rules.ValidatePhone) {\n        runValidatePhone();\n      }\n    }\n  }\n\n  render() {\n    return <div id=\"_validation_wrapper\">{this.props.children}</div>;\n  }\n}\n\nexport default ValidateForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}