{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  clampValue: () => clampValue,\n  countDecimalPlaces: () => countDecimalPlaces,\n  percentToValue: () => percentToValue,\n  roundValueToStep: () => roundValueToStep,\n  toPrecision: () => toPrecision,\n  valueToPercent: () => valueToPercent\n});\nmodule.exports = __toCommonJS(src_exports);\nfunction toNumber(value) {\n  const num = parseFloat(value);\n  return typeof num !== \"number\" || Number.isNaN(num) ? 0 : num;\n}\nfunction toPrecision(value, precision) {\n  let nextValue = toNumber(value);\n  const scaleFactor = 10 ** (precision != null ? precision : 10);\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\n}\nfunction countDecimalPlaces(value) {\n  if (!Number.isFinite(value)) return 0;\n  let e = 1;\n  let p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n}\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\nfunction roundValueToStep(value, from, step) {\n  const nextValue = Math.round((value - from) / step) * step + from;\n  const precision = countDecimalPlaces(step);\n  return toPrecision(nextValue, precision);\n}\nfunction clampValue(value, min, max) {\n  if (value == null) return value;\n  if (max < min) {\n    console.warn(\"clamp: max cannot be less than min\");\n  }\n  return Math.min(Math.max(value, min), max);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  clampValue,\n  countDecimalPlaces,\n  percentToValue,\n  roundValueToStep,\n  toPrecision,\n  valueToPercent\n});","map":{"version":3,"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toCommonJS","mod","value","src_exports","clampValue","countDecimalPlaces","percentToValue","roundValueToStep","toPrecision","valueToPercent","module","exports","toNumber","num","parseFloat","Number","isNaN","precision","nextValue","scaleFactor","Math","round","toFixed","toString","isFinite","e","p","min","max","percent","step","console","warn"],"sources":["/Users/arshadyaseen/Desktop/ReactFromValidator/form-validation-react/node_modules/@chakra-ui/number-utils/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  clampValue: () => clampValue,\n  countDecimalPlaces: () => countDecimalPlaces,\n  percentToValue: () => percentToValue,\n  roundValueToStep: () => roundValueToStep,\n  toPrecision: () => toPrecision,\n  valueToPercent: () => valueToPercent\n});\nmodule.exports = __toCommonJS(src_exports);\nfunction toNumber(value) {\n  const num = parseFloat(value);\n  return typeof num !== \"number\" || Number.isNaN(num) ? 0 : num;\n}\nfunction toPrecision(value, precision) {\n  let nextValue = toNumber(value);\n  const scaleFactor = 10 ** (precision != null ? precision : 10);\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\n}\nfunction countDecimalPlaces(value) {\n  if (!Number.isFinite(value))\n    return 0;\n  let e = 1;\n  let p = 0;\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p += 1;\n  }\n  return p;\n}\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\nfunction roundValueToStep(value, from, step) {\n  const nextValue = Math.round((value - from) / step) * step + from;\n  const precision = countDecimalPlaces(step);\n  return toPrecision(nextValue, precision);\n}\nfunction clampValue(value, min, max) {\n  if (value == null)\n    return value;\n  if (max < min) {\n    console.warn(\"clamp: max cannot be less than min\");\n  }\n  return Math.min(Math.max(value, min), max);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  clampValue,\n  countDecimalPlaces,\n  percentToValue,\n  roundValueToStep,\n  toPrecision,\n  valueToPercent\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}